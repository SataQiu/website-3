<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://koordinator.sh/blog</id>
    <title>Koordinator Blog</title>
    <updated>2023-04-07T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://koordinator.sh/blog"/>
    <subtitle>Koordinator Blog</subtitle>
    <icon>https://koordinator.sh/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Koordinator v1.2: 支持节点资源预留，兼容社区重调度策略]]></title>
        <id>release-v1.2.0</id>
        <link href="https://koordinator.sh/blog/release-v1.2.0"/>
        <updated>2023-04-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[背景]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="背景">背景<a class="hash-link" href="#背景" title="Direct link to heading">​</a></h2><p>Koordinator 是一个开源项目，基于阿里巴巴在容器调度领域多年累积的经验孵化诞生，可以提升容器性能，降低集群资源成本。通过混部、资源画像、调度优化等技术能力，
能够提高延迟敏感的工作负载和批处理作业的运行效率和可靠性，优化集群资源使用效率。</p><p>从 2022 年 4 月发布以来，Koordinator 迄今一共迭代发布了 10 个版本，吸引了了包括阿里巴巴、小米、小红书、爱奇艺、360、有赞 等在内的大量优秀工程师参与贡献。
随着2023年春天的来临，Koordinator也迎来了它的一周年诞辰，在此我们很高兴的向大家宣布，Koordinator v1.2版本正式发布。新版本中Koordinator支持了节点资源预留功能，
并兼容了K8s社区的重调度策略，同时在单机侧增加了对AMD环境L3 Cache和内存带宽隔离的支持。</p><p>在新版本中，共有12位新加入的开发者参与到了Koordiantor社区的建设，他们是@Re-Grh，@chengweiv5，@kingeasternsun，@shelwinnn，@yuexian1234，@Syulin7，@tzzcfrank
@Dengerwei，@complone，@AlbeeSo，@xigang，@leason00，感谢以上开发者的贡献和参与。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="版本功能特性解读">版本功能特性解读<a class="hash-link" href="#版本功能特性解读" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_mojV" id="节点资源预留">节点资源预留<a class="hash-link" href="#节点资源预留" title="Direct link to heading">​</a></h3><p>混部场景中包含的应用形态多种多样，除了已经完成云原生化的容器，还包含很多尚未完成容器化的应用，这部分应用会以进程的形式在宿主机上与K8s容器共同运行。
为了减少K8s应用和其他类型应用在节点侧的资源竞争，Koordinator 支持将一部分资源预留，使其既不参与调度器的资源调度，也不参与节点侧的资源分配，达到资源分隔使用的效果。
在v1.2版本中，Koordiantor已经支持CPU和内存资源维度的预留，并允许直接指定预留的CPU编号，具体如下。</p><h4 class="anchor anchorWithStickyNavbar_mojV" id="节点资源预留声明">节点资源预留声明<a class="hash-link" href="#节点资源预留声明" title="Direct link to heading">​</a></h4><p>在Node上可以配置需要预留的资源量或具体的CPU编号，举例如下：</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Node</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fake</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">node</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">annotations</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># specific 5 cores will be calculated, e.g. 0, 1, 2, 3, 4, and then those core will be reserved.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">node.koordinator.sh/reservation</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'{"resources":{"cpu":"5"}}'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Node</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fake</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">node</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">annotations</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># the cores 0, 1, 2, 3 will be reserved.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">node.koordinator.sh/reservation</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'{"reservedCPUs":"0-3"}'</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>单机组件Koordlet在上报节点资源拓扑信息时，会将具体预留的CPU编号更新到NodeResourceTopology对象的Annotation中。</p><h4 class="anchor anchorWithStickyNavbar_mojV" id="调度及重调度场景适配">调度及重调度场景适配<a class="hash-link" href="#调度及重调度场景适配" title="Direct link to heading">​</a></h4><p>调度器在分配资源的过程中，涉及了多种情况的资源校验，包括Quota管理，节点容量校验，CPU拓扑校验等等，这些场景都需要增加对节点预留资源的考虑，例如，调度器在计算节点CPU容量时，需要将节点预留的资源进行扣除。</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">cpus(alloc) = cpus(total) - cpus(allocated) - cpus(kubeletReserved) - cpus(nodeAnnoReserved)</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>此外，对于Batch混部超卖资源的计算同样需要将这部分资源扣除，而考虑到节点中还包括一部分系统进程的资源消耗，Koord-Manager在计算时会取节点预留和系统用量的最大值，具体为：</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">reserveRatio = (100-thresholdPercent) / 100.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node.reserved = node.alloc * reserveRatio</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">system.used = max(node.used - pod.used, node.anno.reserved)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Node(BE).Alloc = Node.Alloc - Node.Reserved - System.Used - Pod(LS).Used</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>对于重调度，各插件策略需要在节点容量、利用率计算等场景感知节点预留资源量，此外，若已经有容器占用了节点的预留资源，重调度需要考虑将其进行驱逐，确保节点容量得到正确管理，
避免资源竞争。这部分重调度相关的功能，我们将在后续版本进行支持，也欢迎广大爱好者们一起参与共建。</p><h4 class="anchor anchorWithStickyNavbar_mojV" id="单机资源管理">单机资源管理<a class="hash-link" href="#单机资源管理" title="Direct link to heading">​</a></h4><p>对于LS类型的Pod，单机Koordlet组件会根据CPU分配情况动态计算共享CPU池，对于节点预留的CPU核心会将其排除在外，确保LS类型pod和其他非容器化的进程资源隔离。
同时，对于单机相关的QoS策略，例如CPUSuppress压制策略在计算节点利用率时，会将预留资源量考虑在内。</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">suppress(BE) := node.Total * SLOPercent - pod(LS).Used - max(system.Used, node.anno.reserved)</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>关于节点资源预留功能的详细说明，可以参考 <a href="https://github.com/koordinator-sh/koordinator/blob/main/docs/proposals/scheduling/20221227-node-resource-reservation.md" target="_blank" rel="noopener noreferrer">设计文档</a> 中的介绍。</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="兼容社区重调度策略">兼容社区重调度策略<a class="hash-link" href="#兼容社区重调度策略" title="Direct link to heading">​</a></h3><p>得益于 Koordinator Descheduler 的框架日益成熟，在 Koordinator v1.2 版本中，通过引入一种接口适配机制，可以无缝的对 Kubernetes Desceheduler 已有插件进行兼容，在使用时您只需部署Koordinator Descheduler，即可使用到上游的全部功能，以及Koordinator的增强。
Koordinator Descheduler支持上游所有的插件和参数配置，在运行时也保障一样的效果。并且这些上游的插件都可以配置使用 koord-descheduler 内置的 MigrationController，复用优先预留资源保障资源交付的能力和内置增强的稳定性机制实现更安全的重调度。</p><p>兼容的插件列表包括：</p><ul><li>HighNodeUtilization</li><li>LowNodeUtilization</li><li>PodLifeTime</li><li>RemoveFailedPods</li><li>RemoveDuplicates</li><li>RemovePodsHavingTooManyRestarts</li><li>RemovePodsViolatingInterPodAntiAffinity</li><li>RemovePodsViolatingNodeAffinity</li><li>RemovePodsViolatingNodeTaints</li><li>RemovePodsViolatingTopologySpreadConstraint</li><li>DefaultEvictor</li></ul><p>在使用时，可以参考如下的方式配置，以 RemovePodsHavingTooManyRestarts 为例：</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> descheduler/v1alpha2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> DeschedulerConfiguration</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">clientConnection</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">kubeconfig</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"/Users/joseph/asi/koord-2/admin.kubeconfig"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">leaderElection</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">leaderElect</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">resourceName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> test</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">descheduler</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">resourceNamespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> kube</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">system</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">deschedulingInterval</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 10s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">dryRun</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">profiles</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> koord</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">descheduler</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">plugins</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">evict</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">enabled</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> MigrationController</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token key atrule" style="color:#00a4db">deschedule</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token key atrule" style="color:#00a4db">enabled</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> RemovePodsHavingTooManyRestarts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">pluginConfig</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> RemovePodsHavingTooManyRestarts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">args</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> descheduler/v1alpha2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> RemovePodsHavingTooManyRestartsArgs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">podRestartThreshold</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="资源预留调度能力增强">资源预留调度能力增强<a class="hash-link" href="#资源预留调度能力增强" title="Direct link to heading">​</a></h3><p>Koordinator 在比较早期的版本中引入了 Reservation 机制，通过预留资源并复用给指定特征的 Pod 使用，用于帮助解决资源交付确定性问题。
例如重调度场景中期望被驱逐的 Pod 一定有资源可以使用，而不是被驱逐后无资源可用导致引起稳定性问题；又或者需要扩容时，
一些 PaaS 平台希望能够先确定是否满足应用调度编排的资源，再决定是否扩容，或者提前做一些预备工作等。</p><p>Koordinator Reservation 通过 CRD 定义，每个 Reservation 对象会在 koord-scheduler 内伪造成一个 Pod 进行调度，
这样的 Pod 我们称为 Reserve PodReserve Pod 就可以复用已有的调度插件和打分插件找到合适的节点，并最终在调度器内部状态中占据对应的资源。
Reservation 在创建时都会指定预留的资源将来要给哪些 Pod 使用，可以指定具体某个 Pod，也可以指定某些 workload 对象，或者具备某些标签的 Pod 使用。
当这些 Pod 通过 koord-scheduler 调度时，调度器会找到可以被该 Pod 使用的 Reservation 对象，并且优先使用 Reservation 的资源。
并且 Reservation Status 中会记录被哪个 Pod 使用，以及 Pod Annotations 中也会记录使用了哪个 Reservation。
Reservation 被使用后，会自动的清理内部状态，确保其他 Pod 不会因为 Reservation 导致无法调度。</p><p>原有版本实现中，我们对 Reservation 的功能做了诸多限制，例如要求 Pod 只能使用 Reservation 持有的资源，不能结合节点剩余的资源一起分配，
并且也不支持精细化管理的资源，例如不能预留 CPU 核，也不支持预留 GPU 设备等。另外就是 Reservation 默认是可以被重复使用的，
即 Reservation 预留的资源可以被多个 Pod 使用（当然并不会超卖资源，保证不会使用超过 Reservation预留的量）。</p><p>在 Koordinator v1.2 中，我们做了大幅度的优化。首先我们放开了只能使用 Reservation 持有的资源的限制，允许跨出 Reservation 的资源边界，
既可以使用 Reservation 预留的资源，也可以使用节点上剩余的资源。而且我们通过非侵入式的方式扩展了 kube scheduler framework，
支持预留精细化管理的资源，即可以预留 CPU 核和 GPU 设备等。我们也修改了 Reservation 可以被重复使用的默认行为，改为 AllocateOnce，
即 Reservation 一旦被某个 Pod 使用，该 Reservation 会被废弃。这样的改动是考虑到，AllocateOnce 更能覆盖大部分场景，这样作为默认行为，大家在使用时会更简单。</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="支持amd环境下的l3-cache和内存带宽隔离">支持AMD环境下的L3 Cache和内存带宽隔离<a class="hash-link" href="#支持amd环境下的l3-cache和内存带宽隔离" title="Direct link to heading">​</a></h3><p>在v0.3.0版本中，Koordiantor已经支持了Intel环境的L3 Cache和内存带宽隔离，在最新的1.2.0版本中我们新增了对AMD环境的支持。
Linux内核L3 Cache和内存带宽隔离能力提供了统一的resctrl接口，同时支持Intel和AMD环境，主要区别在于，Intel提供的内存带宽隔离接口为百分比格式，
而AMD提供的内存带宽隔离接口为绝对值格式，具体如下。</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain"># Intel Format</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># resctrl schema</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">L3:0=3ff;1=3ff</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MB:0=100;1=100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># AMD Format</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># resctrl schema</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">L3:0=ffff;1=ffff;2=ffff;3=ffff;4=ffff;5=ffff;6=ffff;7=ffff;8=ffff;9=ffff;10=ffff;11=ffff;12=ffff;13=ffff;14=ffff;15=ffff</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MB:0=2048;1=2048;2=2048;3=2048;4=2048;5=2048;6=2048;7=2048;8=2048;9=2048;10=2048;11=2048;12=2048;13=2048;14=2048;15=2048</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>接口格式包含两部分，L3表示对应的socket或CCD可用的“路数”（way），以16进制的数据格式表示，每个比特位表示一路
MB表示对应的socket或CCD可以使用的内存带宽范围，Intel可选范围为0~100的百分比格式，AMD对应的为绝对值格式，单位为Gb/s，2048表示不限制。
Koordiantor统一提供了百分比格式的接口，并自动感知节点环境是否为AMD，决定resctrl接口中填写的格式。</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ConfigMap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> slo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">controller</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> koordinator</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">system</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">resource-qos-config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">"clusterStrategy"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">"lsClass"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           </span><span class="token key atrule" style="color:#00a4db">"resctrlQOS"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token key atrule" style="color:#00a4db">"enable"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token key atrule" style="color:#00a4db">"catRangeStartPercent"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token key atrule" style="color:#00a4db">"catRangeEndPercent"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token key atrule" style="color:#00a4db">"MBAPercent"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">"beClass"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           </span><span class="token key atrule" style="color:#00a4db">"resctrlQOS"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token key atrule" style="color:#00a4db">"enable"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token key atrule" style="color:#00a4db">"catRangeStartPercent"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token key atrule" style="color:#00a4db">"catRangeEndPercent"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">30</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token key atrule" style="color:#00a4db">"MBAPercent"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="其他功能">其他功能<a class="hash-link" href="#其他功能" title="Direct link to heading">​</a></h3><p>通过 <a href="https://github.com/koordinator-sh/koordinator/releases/tag/v1.2.0" target="_blank" rel="noopener noreferrer">v1.2 release</a> 页面，可以看到更多版本所包含的新增功能。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="未来计划">未来计划<a class="hash-link" href="#未来计划" title="Direct link to heading">​</a></h2><p>在接下来的版本中，Koordiantor重点规划了以下功能，具体包括：</p><ul><li>硬件拓扑感知调度，综合考虑节点CPU、内存、GPU等多个资源维度的拓扑关系，在集群范围内进行调度优化。</li><li>对重调度器的可观测性和可追溯性进行增强。</li><li>GPU资源调度能力的增强。</li></ul><p>Koordinator 是一个开放的社区，非常欢迎广大云原生爱好者们通过各种方式一起参与共建，无论您在云原生领域是初学乍练还是驾轻就熟，我们都非常期待听到您的声音！</p>]]></content>
        <author>
            <name>Zuowei Zhang</name>
            <uri>https://github.com/zwzhang0107</uri>
        </author>
        <category label="release" term="release"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[龙蜥 plugsched 神器助力 Koordinator 云原生单机混部—— 内核 CPU QoS 揭秘]]></title>
        <id>/anolis-CPU-Co-location</id>
        <link href="https://koordinator.sh/blog/anolis-CPU-Co-location"/>
        <updated>2023-02-28T02:59:03.000Z</updated>
        <summary type="html"><![CDATA[什么是 CPU 混部]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="什么是-cpu-混部">什么是 CPU 混部<a class="hash-link" href="#什么是-cpu-混部" title="Direct link to heading">​</a></h2><p>CPU 混部是指将不同类型的业务部署到同一台机器上运行，让它们共享机器上的 CPU 资源以提升 CPU 利用率，从而降低机器的采购和运营成本。但是，对于有些类型的任务来说，它们对延时非常的敏感，比如电商、搜索或 web 服务等，这类任务的实时性很高，但是通常对资源的消耗却不是很多，我们称之为在线任务；还有一类任务，它们更多的关注计算或者批处理，对延时没有要求，但是消耗的资源相对较多，我们称之为离线任务。</p><p>当这两类任务同时部署到同一台机器上时，由于离线任务对资源的占用较多，资源竞争导致在线任务的延时受到了很大的影响，而且，在超线程架构的机器上，即使离线任务和在线任务跑在不同的超线程 CPU 上，流水线和 cache 的竞争也会导致在线任务的运行受到影响。于是，CPU 混部技术诞生了，来解决离线任务对在线任务延时的影响，同时还能进一步提升 CPU 资源的利用率。</p><p align="center"><img src="https://user-images.githubusercontent.com/33253760/221129910-b68705ae-5906-4294-8bb0-e01d2a6ed849.png"></p><p align="center">图1 单机混部 CPU 利用率示意图</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="内核-cpu-混部技术">内核 CPU 混部技术<a class="hash-link" href="#内核-cpu-混部技术" title="Direct link to heading">​</a></h2><p>CPU 混部技术，主要是通过单机操作系统调度器来实现的，通过任务类型来决定所分配到的 CPU 资源。Koordinator 社区主要使用的单机操作系统发行版有 Alibaba Cloud Linux 2/3（简称 Alinux2/3） 和 CentOS7.9。对于 Alinux2/3，它使用的是龙蜥社区的 Group Identity CPU 混部技术，在操作系统内核中提供了 CPU 混部能力。Group Identity 在原有的 CFS 调度器中新增了另一个运行队列来区分在线和离线任务，而且，为了避免对端 CPU（超线程架构）上离线任务的干扰，Group Identity 会对其进行驱逐。龙蜥的 Group Identity 技术已经经过阿里双十一等大型活动以及大规模商业化的验证，其 CPU 混部能力也得到广大用户和开发者的认可。</p><p>但是对于 CentOS 发行版来说，到目前为止还没有提供任何 CPU 混部相关的技术和能力。对于 CentOS CPU 混部能力的缺失，可能有以下几种解决方案：</p><ul><li>制作 CentOS 的衍生版系统，并包含 CPU 混部技术；</li><li>迁移到 Alibaba Cloud Linux 2/3 操作系统发行版；</li></ul><p>对于第一种方案，需要从 CentOS 镜像站中下载其内核源码，将 CPU 混部技术移植到内核，编译后安装，然后重启系统便可以使用该技术，但这会涉及到业务迁移和停机，势必会给业务方带来昂贵的代价。
对于第二种方案，虽然迁移工作会有一定的工作量，但是，Alinux2/3 或 Anolis OS 包含了完整的混部资源隔离方案（CPU 混部仅仅是其中一点），技术红利所带来的收益远比迁移代价要大得多。而且 CentOS 即将停服，为了解决 CentOS 停服问题，龙蜥社区推出了 Anolis OS 发行版操作系统，该发行版系统完全兼容 CentOS，用户可以进行无缝迁移。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="龙蜥-cpu-混部插件">龙蜥 CPU 混部插件<a class="hash-link" href="#龙蜥-cpu-混部插件" title="Direct link to heading">​</a></h2><p>针对 Koordinator 云原生 CentOS 单机操作系统 CPU 混部能力的缺失，龙蜥社区开发人员给出了另一种方案，利用 plugsched 调度器热升级技术提供一种 CPU 混部技术的调度器插件包，该插件包含了阿里云早期（2017年）的 CPU 混部技术 bvt + noise clean，该技术采用的是 throttle 机制，当调度器选择下一个任务时，它会检测对端 CPU 上的任务类型以及当前 CPU 正在执行的任务类型，如果在、离线任务同时存在，则会将离线任务 throttle 掉，然后继续选择下一个任务进行调度，保证在线任务优先执行且不被对端 CPU 上的离线干扰。该 CPU 混部调度器插件可直接安装到 CentOS7.9，不需要停机和业务迁移等工作。</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="plugsched-sdk-神器">Plugsched SDK 神器<a class="hash-link" href="#plugsched-sdk-神器" title="Direct link to heading">​</a></h3><p>Plugsched 调度器热升级，是龙蜥社区推出的 plugsched SDK 调度器热升级开发工具，它可从 Linux 内核中将调度器解耦，形成一个独立的模块，然后将 CPU 混部技术移植到调度器模块，形成一个调度器插件，然后将其直接安装到运行的系统中就可以使用 CPU 混部技术。Plugsched，可以对内核调度器特性动态的进行增、删、改，来满足业务的需求，且无需进行业务迁移和停机升级，还可以回滚。内核开发人员可通过 plugsched SDK 生产出各种类型的调度器插件来满足不同的业务场景。</p><p>Plugsched 调度器热升级论文《Efficient Scheduler Live Update for Linux Kernel with Modularization》已被 ASPLOS 顶会收录，里面详细介绍了 plugsched 技术原理和应用价值，以及全面的测试和评估。目前，plugsched 生产的插件已在蚂蚁集团、阿里云和国内某大型互联网企业规模部署。</p><p>Plugsched 开源链接：<a href="https://gitee.com/anolis/plugsched" target="_blank" rel="noopener noreferrer">https://gitee.com/anolis/plugsched</a></p><h3 class="anchor anchorWithStickyNavbar_mojV" id="cpu-混部插件测试">CPU 混部插件测试<a class="hash-link" href="#cpu-混部插件测试" title="Direct link to heading">​</a></h3><p>开发人员对该调度器插件进行了 CPU 混部的测试，服务端配置：</p><ul><li>测试机器：阿里云神龙裸金属服务器，104 CPU，384 GB 内存</li><li>系统配置：CentOS 7.9 发行版，内核版本 3.10，安装 CPU 混部调度器插件</li><li>测试内容：在线任务是 Nginx 服务，容器配置为 80C 10GB，Nginx workers 数量为 80；离线任务是 ffmpeg 视频转码，容器配置为 50C 20GB，线程数量为 50。</li><li>测试case：<ul><li>基线：单独启动 Nginx 容器</li><li>对照组：同时启动 Nginx 容器和 ffmpeg 容器，但不设置优先级（不启用混部功能）</li><li>实验组：同时启动 Nginx 容器和 ffmpeg 容器，给 Nginx 设置在线高优先级，ffmpeg 为离线低优先级（启用混部功能）</li></ul></li></ul><p>在另一台压测机上使用 wrk 工具向 Nginx 服务发起请求，结果如下：（单位：ms）</p><table><thead><tr><th></th><th>基线</th><th>对照组</th><th>实验组</th></tr></thead><tbody><tr><td>RT-P50</td><td>0.223</td><td>0.245（+9.86%）</td><td>0.224（+0.44%）</td></tr><tr><td>RT-P75</td><td>0.322</td><td>0.387（+20.18%）</td><td>0.338（+4.96%）</td></tr><tr><td>RT-P90</td><td>0.444</td><td>0.575（+29.50)</td><td>0.504（+13.51%）</td></tr><tr><td>RT-P99</td><td>0.706</td><td>1.7（+140.79)</td><td>0.88（+24.64%）</td></tr><tr><td>CPU%</td><td>25.15%</td><td>71.7%</td><td>49.15%</td></tr></tbody></table><p>从上面的结果来看，没有 CPU 混部插件，离线任务对在线任务的影响很大，P99 延时增长了一倍多，而安装 CPU 混部插件后，P99 长尾延时的影响显著降低，CPU 利用率也接近50%。</p><p>该插件虽然能显著降低离线对在线任务的干扰，但还是逊色于龙蜥社区的 Group Identity 技术。龙蜥的 Group Identity 技术能让在线受到的干扰小于 5%，而且整机利用率的提升也比该插件要更多一些，达到 60% 以上（可查阅：<a href="https://help.aliyun.com/document_detail/450006.html" target="_blank" rel="noopener noreferrer">koordinator 混部最佳实践手册</a>）。这些差异的原因在于，1）内核自身的差异，CentOS 7.9 使用的是比较早的 3.10 内核，而龙蜥使用的是 4.19/5.10 内核，3.10 内核调度器性能本身就不及 4.19/5.10；2）Group Identity 的实现原理相比 noise clean 更适合 CPU 混部场景。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="结语">结语<a class="hash-link" href="#结语" title="Direct link to heading">​</a></h2><p>最后，欢迎广大技术人员、开源爱好者和读者用户加入 Koordinator、openanolis 社区，享受社区带来的技术，不论是 Group Identity 还是 Plugsched 神器，一定会给大家带来意想不到的收益和价值，欢迎大家共建社区，与社区共同交流、成长和发展。</p>]]></content>
        <author>
            <name>Erwei Deng</name>
            <uri>https://github.com/Dengerwei</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Koordinator v1.1: 让调度感知负载与干扰检测采集]]></title>
        <id>release-v1.1.0</id>
        <link href="https://koordinator.sh/blog/release-v1.1.0"/>
        <updated>2023-01-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[背景]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="背景">背景<a class="hash-link" href="#背景" title="Direct link to heading">​</a></h2><p>Koordinator 旨在为用户提供完整的混部工作负载编排、混部资源调度、混部资源隔离及性能调优解决方案，帮助用户提高延迟敏感服务的运行性能，挖掘空闲节点资源并分配给真正有需要的计算任务，从而提高全局的资源利用效率。</p><p>从 2022 年 4 月发布以来，Koordinator 迄今一共迭代发布了 9 个版本。项目经历的大半年发展过程中，社区吸纳了包括阿里巴巴、小米、小红书、爱奇艺、360、有赞 等在内的大量优秀工程师，贡献了众多的想法、代码和场景，一起推动 Koordinator 项目的成熟。</p><p>今天，很高兴的宣布 Koordinator v1.1 正式发布，它包含了负载感知调度/重调度、cgroup v2 支持、干扰检测指标采集，以及其他一系列优化点。接下来我们就针对这些新增特性做深入解读与说明。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="版本特性深入解读">版本特性深入解读<a class="hash-link" href="#版本特性深入解读" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_mojV" id="负载感知调度">负载感知调度<a class="hash-link" href="#负载感知调度" title="Direct link to heading">​</a></h3><h4 class="anchor anchorWithStickyNavbar_mojV" id="支持按工作负载类型统计和均衡负载水位">支持按工作负载类型统计和均衡负载水位<a class="hash-link" href="#支持按工作负载类型统计和均衡负载水位" title="Direct link to heading">​</a></h4><p>Koordinator v1.0 及之前的版本，提供了负载感知调度提供基本的利用率阈值过滤保护高负载水位的节点继续恶化影响工作负载的运行时质量，以及通过预估机制解决解决冷节点过载的情况。已有的负载感知调度能解决很多常见场景的问题。但负载感知调度作为一种优化手段，还有比较多的场景是需要完善的。</p><p>目前的负载感知调度主要解决了集群内整机维度的负载均衡效果，但有可能出现一些特殊的情况：节点部署了不少离线Pod运行，拉高了整机的利用率，但在线应用工作负载的整体利用率偏低。这个时候如果有新的在线Pod，且整个集群内的资源比较紧张时，会有如下的问题：</p><ol><li>有可能因为整机利用率超过整机安全阈值导致无法调度到这个节点上的；</li><li>还可能出现一个节点的利用率虽然相对比较低，但上面跑的全是在线应用率，从在线应用角度看，利用率已经偏高了，但按照当前的调度策略，还会继续调度这个Pod上来，导致该节点堆积了大量的在线应用，整体的运行效果并不好。</li></ol><p>在 Koordinator v1.1 中，koord-scheduler 支持感知工作负载类型，区分不同的水位和策略进行调度。</p><p>在 Filter 阶段，新增 threshold 配置 <code>prodUsageThresholds</code>，表示在线应用的安全阈值，默认为空。如果当前调度的 Pod 是 Prod 类型，koord-scheduler 会从当前节点的 NodeMetric 中统计所有在线应用的利用率之和，如果超过了 <code>prodUsageThresholds</code> 就过滤掉该节点；如果是离线 Pod，或者没有配置 <code>prodUsageThresholds</code>，保持原有的逻辑，按整机利用率处理。</p><p>在 Score 阶段，新增开关 <code>scoreAccordingProdUsage</code> 表示是否按 Prod 类型的利用率打分均衡。默认不启用。当开启后，且当前 Pod 是 Prod 类型的话，koord-scheduler 在预估算法中只处理 Prod 类型的 Pod，并对 NodeMetrics 中记录的其他的未使用预估机制处理的在线应用的 Pod 的当前利用率值进行求和，求和后的值参与最终的打分。如果没有开启 <code>scoreAccordingProdUsage</code>，或者是离线Pod，保持原有逻辑，按整机利用率处理。</p><h4 class="anchor anchorWithStickyNavbar_mojV" id="支持按百分位数利用率均衡">支持按百分位数利用率均衡<a class="hash-link" href="#支持按百分位数利用率均衡" title="Direct link to heading">​</a></h4><p>Koordinator v1.0及以前的版本都是按照 koordlet 上报的平均利用率数据进行过滤和打分。但平均值隐藏了比较多的信息，因此在 Koordinator v1.1 中 koordlet 新增了根据百分位数统计的利用率聚合数据。调度器侧也跟着做了相应的适配。</p><p>更改调度器的 LoadAware 插件的配置，<code>aggregated</code> 表示按照百分位数聚合数据进行打分和过滤。<code>aggregated.usageThresholds</code> 表示过滤时的水位阈值；<code>aggregated.usageAggregationType</code> 表示过滤阶段要使用的百分位数类型，支持 <code>avg</code>，<code>p99</code>, <code>p95</code>, <code>p90</code> 和 <code>p50</code>；<code>aggregated.usageAggregatedDuration</code> 表示过滤阶段期望使用的聚合周期，如果不配置，调度器将使用 NodeMetrics 中上报的最大周期的数据；<code>aggregated.scoreAggregationType</code> 表示在打分阶段期望使用的百分位数类型；<code>aggregated.scoreAggregatedDuration</code> 表示打分阶段期望使用的聚合周期，如果不配置，调度器将使用 NodeMetrics 中上报的最大周期的数据。</p><p>在 Filter 阶段，如果配置了 <code>aggregated.usageThresholds</code> 以及对应的聚合类型，调度器将按该百分位数统计值进行过滤；</p><p>在 Score 阶段，如果配置了 <code>aggregated.scoreAggregationType</code>，调度器将会按该百分位数统计值打分；目前暂时不支持 Prod Pod 使用百分位数过滤。</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="负载感知重调度">负载感知重调度<a class="hash-link" href="#负载感知重调度" title="Direct link to heading">​</a></h3><p>Koordinator 在过去的几个版本中，持续的演进重调度器，先后了开源完整的框架，加强了安全性，避免因过度驱逐 Pod 影响在线应用的稳定性。这也影响了重调度功能的进展，过去 Koordinator 暂时没有太多力量建设重调度能力。这一情况将会得到改变。</p><p>Koordinator v1.1 中我们新增了负载感知重调度功能。新的插件称为 <code>LowNodeLoad</code>，该插件配合着调度器的负载感知调度能力，可以形成一个闭环，调度器的负载感知调度在调度时刻决策选择最优节点，但随着时间和集群环境以及工作负载面对的流量/请求的变化时，负载感知重调度可以介入进来，帮助优化负载水位超过安全阈值的节点。 <code>LowNodeLoad</code> 与 K8s descheduler 的插件 LowNodeUtilization 不同的是，LowNodeLoad是根据节点真实利用率的情况决策重调度，而 LowNodeUtilization 是根据资源分配率决策重调度。</p><p><code>LowNodeLoad</code> 插件有两个最重要的参数，分别是 <code>highThresholds</code> 和 <code>lowThresholds</code>：</p><ul><li><code>highThresholds</code> 表示负载水位的警戒阈值，超过该阈值的节点上的Pod将参与重调度；</li><li><code>lowThresholds</code> 表示负载水位的安全水位。低于该阈值的节点上的Pod不会被重调度。</li></ul><p>以下图为例，lowThresholds 为45%，highThresholds 为 70%，那么低于 45% 的节点是安全的，因为水位已经很低了；高于45%，但是低于 70%的是区间是我们期望的负载水位范围；高于70%的节点就不安全了，应该把超过70%的这部分（假设当前节点A的负载水位是85%），那么 85% - 70% = 15% 的负载降低，筛选 Pod 后执行迁移。</p><p><img loading="lazy" alt="LowNodeLoad 示例" src="/assets/images/lownodeload-sample-53d42010721f0acac9ece644dfff4252.png" width="2288" height="760"></p><p>迁移时，还要考虑到低于 45% 的这部分节点是我们重调度后要承载新Pod的节点，我们需要确保迁移的Pod的负载总量不会超过这些低负载节点的承载上限。这个承载上限即是 highThresholds - 节点当前负载，假设节点B的负载水位是20%，那么 70%-20% = 50%，这50%就是可以承载的容量了。因此迁移时每驱逐一个 Pod，这个承载容量就应该扣掉当前重调度 Pod 的当前负载或者预估负载或者画像值（这部分值与负载调度里的值对应）。这样就可以确保不会多迁移。 </p><p>如果一个集群总是可能会出现某些节点的负载就是比较高，而且数量并不多，这个时候如果频繁的重调度这些节点，也会带来安全隐患，因此可以让用户按需设置 <code>numberOfNodes</code>。</p><p>另外，<code>LowNodeLoad</code> 识别出超过阈值的节点后会筛选 Pod，当筛选 Pod 时，可以配置要支持或者过滤的 namespace，或者配置 pod selector 筛选，也可以配置 <code>nodeFit</code> 检查每个备选 Pod 对应的 Node Affinity/Node Selector/Toleration 是否有与之匹配的 Node，如果没有的话，这种节点也会被忽略。当然可以考虑不启用这个能力，通过配置 <code>nodeFit</code> 为 false 后即可禁用，此时完全由底层的 <code>MigrationController</code> 通过 Koordinator Reservation 预留资源；</p><p>当筛选出 Pod 后，会对这些 Pod 进行排序。会依靠Koordinator QoSClass、Kubernetes QoSClass、Priority、用量和创建时间等多个维度排序。</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="cgroup-v2-支持">cgroup v2 支持<a class="hash-link" href="#cgroup-v2-支持" title="Direct link to heading">​</a></h3><h4 class="anchor anchorWithStickyNavbar_mojV" id="背景-1">背景<a class="hash-link" href="#背景-1" title="Direct link to heading">​</a></h4><p>Koordinator 中众多单机 QoS 能力和资源压制/弹性策略构建在 Linux Control Group (cgroups) 机制上，比如 CPU QoS (cpu)、Memory QoS (memory)、CPU Burst (cpu)、CPU Suppress (cpu, cpuset)，koordlet 组件可以通过 cgroups (v1) 限制容器可用资源的时间片、权重、优先级、拓扑等属性。Linux 高版本内核也在持续增强和迭代了 cgroups 机制，带来了 cgroups v2 机制，统一 cgroups 目录结构，改善 v1 中不同 subsystem/cgroup controller 之间的协作，并进一步增强了部分子系统的资源管理和监控能力。Kubernetes 自 1.25 起将 cgroups v2 作为 GA (general availability) 特性，在 Kubelet 中启用该特性进行容器的资源管理，在统一的 cgroups 层次下设置容器的资源隔离参数，支持 MemoryQoS 的增强特性。</p><p><img loading="lazy" alt="cgroup v1/v2 结构" src="/assets/images/cgroup-v1-and-v2-94df02d090b7f7b4e7f3cc4c6accdaae.svg" width="691" height="171"></p><p>在 Koordinator v1.1 中，单机组件 koordlet 新增对 cgroups v2 的支持，包括如下工作：</p><ul><li>重构了 Resource Executor 模块，以统一相同或近似的 cgroup 接口在 v1 和 v2 不同版本上的文件操作，便于 koordlet 特性兼容 cgroups v2 和合并读写冲突。</li><li>在当前已开放的单机特性中适配 cgroups v2，采用新的 Resource Executor 模块替换 cgroup 操作，优化不同系统环境下的报错日志。</li></ul><p>Koordinator v1.1 中大部分 koordlet 特性已经兼容 cgroups v2，包括但不限于：</p><ul><li>资源利用率采集</li><li>动态资源超卖</li><li>Batch 资源隔离（BatchResource，废弃BECgroupReconcile）</li><li>CPU QoS（GroupIdentity）</li><li>Memory QoS（CgroupReconcile）</li><li>CPU 动态压制（BECPUSuppress）</li><li>内存驱逐（BEMemoryEvict）</li><li>CPU Burst（CPUBurst）</li><li>L3 Cache 及内存带宽隔离（RdtResctrl）</li></ul><p>遗留的未兼容特性如 PSICollector 将在接下来的 v1.2 版本中进行适配，可以跟进 issue#407 获取最新进展。接下来的 Koordinator 版本中也将逐渐引入更多 cgroups v2 的增强功能，敬请期待。</p><h4 class="anchor anchorWithStickyNavbar_mojV" id="使用-cgroups-v2">使用 cgroups v2<a class="hash-link" href="#使用-cgroups-v2" title="Direct link to heading">​</a></h4><p>在 Koordinator v1.1 中，koordlet 对 cgroups v2 的适配对上层功能配置透明，除了被废弃特性的 feature-gate 以外，您无需变动 ConfigMap <code>slo-controller-config</code> 和其他 feature-gate 配置。当 koordlet 运行在启用 cgroups v2 的节点上时，相应单机特性将自动切换到 cgroups-v2 系统接口进行操作。</p><p>此外，cgroups v2 是 Linux 高版本内核（建议 &gt;=5.8）的特性，对系统内核版本和 Kubernetes 版本有一定依赖。建议采用默认启用 cgroups v2 的 Linux 发行版以及 Kubernetes v1.24 以上版本。</p><p>更多关于如何启用 cgroups v2 的说明，请参照 Kubernetes 社区<a href="https://kubernetes.io/docs/concepts/architecture/cgroups/#using-cgroupv2" target="_blank" rel="noopener noreferrer">文档</a>。</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="干扰检测指标采集">干扰检测指标采集<a class="hash-link" href="#干扰检测指标采集" title="Direct link to heading">​</a></h3><p>在真实的生产环境下，单机的运行时状态是一个“混沌系统”，资源竞争产生的应用干扰无法绝对避免。Koordinator 正在建立干扰检测与优化的能力，通过提取应用运行状态的指标，进行实时的分析和检测，在发现干扰后对目标应用和干扰源采取更具针对性的策略。</p><p>当前 Koordinator 已经实现了一系列 <code>Performance Collector</code>，在单机侧采集与应用运行状态高相关性的底层指标，并通过 Prometheus 暴露出来，为干扰检测能力和集群应用调度提供支持。</p><h4 class="anchor anchorWithStickyNavbar_mojV" id="指标采集">指标采集<a class="hash-link" href="#指标采集" title="Direct link to heading">​</a></h4><p>Performance Collector 由多个 feature-gate 进行控制，Koordinator 目前提供以下几个指标采集器：</p><ul><li><code>CPICollector</code>：用于控制 CPI 指标采集器。CPI：Cycles Per Instruction。指令在计算机中执行所需要的平均时钟周期数。CPI 采集器基于 Cycles 和 Instructions 这两个 Kernel PMU（Performance Monitoring Unit）事件以及 perf_event_open(2) 系统调用实现。</li><li><code>PSICollector</code>：用于控制 PSI 指标采集器。PSI：Pressure Stall Information。表示容器在采集时间间隔内，因为等待 cpu、内存、IO 资源分配而阻塞的任务数。使用 PSI 采集器前，需要在 Anolis OS 中开启 PSI 功能，您可以参考<a href="https://help.aliyun.com/document_detail/155464.html" target="_blank" rel="noopener noreferrer">文档</a>获取开启方法。</li></ul><p>Performance Collector 目前是默认关闭的。您可以通过修改 Koordlet 的 feature-gates 项来使用它，此项修改不会影响其他 feature-gate</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl edit ds koordlet -n koordinator-system</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">args</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># modify here</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># - -feature-gates=BECPUEvict=true,BEMemoryEvict=true,CgroupReconcile=true,Accelerators=true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">feature</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">gates=BECPUEvict=true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">BEMemoryEvict=true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">CgroupReconcile=true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">Accelerators=true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">CPICollector=true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">PSICollector=true</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h4 class="anchor anchorWithStickyNavbar_mojV" id="servicemonitor">ServiceMonitor<a class="hash-link" href="#servicemonitor" title="Direct link to heading">​</a></h4><p>v1.1.0 版本的 Koordinator 为 Koordlet 增加了 ServiceMonitor 的能力，将所采集指标通过 Prometheus 暴露出来，用户可基于此能力采集相应指标进行应用系统的分析与管理。</p><p>ServiceMonitor 由 Prometheus 引入，故在 helm chart 中设置默认不开启安装，可以通过以下命令安装ServiceMonitor：</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">helm install koordinator https://... --set koordlet.enableServiceMonitor=true</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>部署后可在 Prometheus UI 找到该 Targets。</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain"># HELP koordlet_container_cpi Container cpi collected by koordlet</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># TYPE koordlet_container_cpi gauge</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">koordlet_container_cpi{container_id="containerd://498de02ddd3ad7c901b3c80f96c57db5b3ed9a817dbfab9d16b18be7e7d2d047",container_name="koordlet",cpi_field="cycles",node="your-node-name",pod_name="koordlet-x8g2j",pod_namespace="koordinator-system",pod_uid="3440fb9c-423b-48e9-8850-06a6c50f633d"} 2.228107503e+09</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">koordlet_container_cpi{container_id="containerd://498de02ddd3ad7c901b3c80f96c57db5b3ed9a817dbfab9d16b18be7e7d2d047",container_name="koordlet",cpi_field="instructions",node="your-node-name",pod_name="koordlet-x8g2j",pod_namespace="koordinator-system",pod_uid="3440fb9c-423b-48e9-8850-06a6c50f633d"} 4.1456092e+09</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>可以期待的是，Koordinator 干扰检测的能力在更复杂的真实场景下还需要更多检测指标的补充，后续将在如内存、磁盘 IO 等其他诸多资源的指标采集建设方面持续发力。</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="其他更新点">其他更新点<a class="hash-link" href="#其他更新点" title="Direct link to heading">​</a></h3><p>通过 <a href="https://github.com/koordinator-sh/koordinator/releases/tag/v1.1.0" target="_blank" rel="noopener noreferrer">v1.1 release</a> 页面，可以看到更多版本所包含的新增功能。</p>]]></content>
        <author>
            <name>Siyu Wang</name>
            <uri>https://github.com/FillZpp</uri>
        </author>
        <category label="release" term="release"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Koordinator v1.0: 正式发布]]></title>
        <id>release-v1.0.0</id>
        <link href="https://koordinator.sh/blog/release-v1.0.0"/>
        <updated>2022-11-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Koordinator 今年3月份开源以来，先后发布了7个版本，逐步的把阿里巴巴&阿里云内部的混部系统的核心能力输出到开源社区，并在中间过程中逐渐的被 Kubernetes、大数据、高性能计算、机器学习领域或者社区的关注，Koordinator 社区也逐步获得了一些贡献者的支持，并有一些企业开始逐步的在生产环境中使用 Koordinator 解决实际生产中遇到的成本问题、混部问题等。 经过 Koordinator 社区的努力，我们怀着十分激动的心情向大家宣布 Koordinator 1.0 版本正式发布。]]></summary>
        <content type="html"><![CDATA[<p>Koordinator 今年3月份开源以来，先后发布了7个版本，逐步的把阿里巴巴&amp;阿里云内部的混部系统的核心能力输出到开源社区，并在中间过程中逐渐的被 Kubernetes、大数据、高性能计算、机器学习领域或者社区的关注，Koordinator 社区也逐步获得了一些贡献者的支持，并有一些企业开始逐步的在生产环境中使用 Koordinator 解决实际生产中遇到的成本问题、混部问题等。 经过 Koordinator 社区的努力，我们怀着十分激动的心情向大家宣布 Koordinator 1.0 版本正式发布。</p><p>Koordinator 项目早期着重建设核心混部能力 -- 差异化 SLO，并且为了让用户更容易的使用 Koordinator 的混部能力，Koordinator 提供了 ClusterColocationProfile 机制帮助用户可以不用修改存量代码完成不同工作负载的混部，让用户逐步的熟悉混部技术。随后 Koordinaor 逐步在节点侧 QoS 保障机制上做了增强，提供了包括但不限于 CPU Suppress、CPU Burst、 Memory QoS、L3 Cache/MBA 资源隔离机制和基于满足度驱逐机制等多种能力，解决了大部分节点侧工作负载的稳定性问题。配合使用 Koordinator Runtime Proxy 组件，可以更好的兼容 Kubernetes kubelet 原生管理机制。</p><p>并且 Koordinator 在任务调度和 QoS 感知调度以及重调度等方面也都提供了一些创新方案，建设了全面兼容 Kubernetes CPU 管理机制的精细化 CPU 调度能力，面向节点实际负载的均衡调度能力。为了更好的让用户管理好资源， Koordinator 还提供了资源预留能力（Reservation)，并且 Koordinator 基于 Kubernetes 社区已有的Coscheduling、ElasticQuota Scheduling 能力做了进一步的增强，为任务调度领域注入了新的活力。Koordinator 提供了全新的重调度器框架，着重建设 Descheduler 的扩展性和安全性问题。</p><h1>安装或升级 Koordinator v1.0.0</h1><h2 class="anchor anchorWithStickyNavbar_mojV" id="使用-helm-安装">使用 Helm 安装<a class="hash-link" href="#使用-helm-安装" title="Direct link to heading">​</a></h2><p>您可以通过 helm v3.5+ 非常方便的安装 Koordinator，Helm 是一个简单的命令行工具，您可以从 <a href="https://github.com/helm/helm/releases" target="_blank" rel="noopener noreferrer">这里</a> 获取它。</p><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Firstly add koordinator charts repository if you haven't do this.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> koordinator-sh https://koordinator-sh.github.io/charts/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># [Optional]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Install the latest version.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> koordinator koordinator-sh/koordinator --version </span><span class="token number" style="color:#36acaa">1.0</span><span class="token plain">.0</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h1>版本功能特性解读</h1><p>Koordinator v1.0 整体新增的特性并不多，主要有以下一些变化</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="独立-api-repo">独立 API Repo<a class="hash-link" href="#独立-api-repo" title="Direct link to heading">​</a></h2><p>为了更方便集成和使用 Koordiantor 定义的 API，并避免因依赖 Koordiantor 引入额外的依赖或者依赖冲突问题，我们建立了独立的 API Repo: <a href="https://github.com/koordinator-sh/apis" target="_blank" rel="noopener noreferrer">koordinator-sh/apis</a></p><h2 class="anchor anchorWithStickyNavbar_mojV" id="新增-elasticquota-webhook">新增 ElasticQuota Webhook<a class="hash-link" href="#新增-elasticquota-webhook" title="Direct link to heading">​</a></h2><p>在 Koordinator v0.7 版本中，我们基于 Kubernetes sig-scheduler 提供的 ElasticQuota 做了诸多增强，提供了树形管理机制，并提供了公平性保障机制等，可以很好的帮助您解决使用 ElasticQuota 遇到的问题。在 Koordinator v1.0 版本中，我们进一步提供了 ElasticQuota Webhook，帮助您在使用 ElasticQuota 树形管理机制时，保障新的 ElasticQuota 对象遵循 Koordinator 定义的规范或约束：</p><ol><li>除了根节点，其他所有子节点的 min 之和要小于父节点的 min。</li><li>不限制子节点 max，允许子节点的 max 大于父节点的 max。考虑以下场景，集群中有 2 个 ElasticQuota 子树：dev-parent 和 production-parent，每个子树都有几个子 ElasticQuota。 当 production-parent 忙时，我们可以通过只降低 dev-parent 的 max 限制  dev-parent 整颗子树的资源使用量，而不是降低 dev-parent 子树的每个子 ElasticQuota 的max限制用量。</li><li>Pod 不能使用父节点ElasticQuota。如果放开这个限制，会导致整个弹性 Quota 的机制变的异常复杂，暂时不考虑支持这种场景。</li><li>只有父节点可以挂子节点，不允许子节点挂子节点</li><li>暂时不允许改变 ElasticQuota 的 <code>quota.scheduling.koordinator.sh/is-parent</code>属性</li></ol><h2 class="anchor anchorWithStickyNavbar_mojV" id="进一步完善-elasticquota-scheduling">进一步完善 ElasticQuota Scheduling<a class="hash-link" href="#进一步完善-elasticquota-scheduling" title="Direct link to heading">​</a></h2><p>在 Koordinator v0.7 版本中，koord-scheduler 的主副 Pod 都会启动 ElasticQuota Controller 并都会更新 ElasticQuota 对象。在 Koordinator v1.0 中我们修复了该问题，确保只有主 Pod 可以启动 Controller 并更新 ElasticQuota 对象。 还优化了 ElasticQuota Controller 潜在的频繁更新 ElasticQuota 对象的问题，当检查到 ElasticQuota 各维度数据发生变化时才会更新，降低频繁更新给 APIServer 带来的压力。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="进一步完善-device-share-scheduling">进一步完善 Device Share Scheduling<a class="hash-link" href="#进一步完善-device-share-scheduling" title="Direct link to heading">​</a></h2><p>Koordinator v1.0 中 koordlet 会上报 GPU 的型号和驱动版本到 Device CRD 对象中，并会由 koord-manager 同步更新到 Node 对象，追加相应的标签。</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Node</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">kubernetes.io/gpu-driver</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 460.91.03</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">kubernetes.io/gpu-model</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Tesla</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">T4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> cn</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">hangzhou.10.0.4.164</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">status</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">...</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="koordinator-runtime-proxy-增强兼容性">Koordinator Runtime Proxy 增强兼容性<a class="hash-link" href="#koordinator-runtime-proxy-增强兼容性" title="Direct link to heading">​</a></h2><p>在 Koordinator 之前的版本中，koord-runtime-proxy 和 koordlet 一起安装后，如果 koordlet 异常或者 koordlet 卸载/重装等场景下，会遇到新调度到节点的 Pod 无法创建容器的问题。为了解决这个问题，koord-runtime-proxy 会感知 Pod 是否具有特殊的 label <code>runtimeproxy.koordinator.sh/skip-hookserver=true</code>，如果 Pod 存在该标签，koord-runtime-proxy 会直接把 CRI 请求转发给 containerd/docker 等 runtime。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="其他改动">其他改动<a class="hash-link" href="#其他改动" title="Direct link to heading">​</a></h2><p>你可以通过 <a href="https://github.com/koordinator-sh/koordinator/releases/tag/v1.0.0" target="_blank" rel="noopener noreferrer">Github release</a> 页面，来查看更多的改动以及它们的作者与提交记录。</p>]]></content>
        <author>
            <name>Joseph</name>
            <uri>https://github.com/eahydra</uri>
        </author>
        <category label="release" term="release"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Koordinator v0.7: 为任务调度领域注入新活力]]></title>
        <id>release-v0.7.0</id>
        <link href="https://koordinator.sh/blog/release-v0.7.0"/>
        <updated>2022-09-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Koordinator[1] 继上次 v0.6版本[2] 发布后，经过 Koordinator 社区的努力，我们迎来了具有重大意义的 v0.7 版本。在这个版本中着重解决机器学习、大数据场景需要的任务调度能力，例如 CoScheduling、ElasticQuota和精细化的 GPU 共享调度能力。并在调度问题诊断分析方面得到了增强，重调度器也极大的提升了安全性，降低了重调度的风险。]]></summary>
        <content type="html"><![CDATA[<p><a href="https://koordinator.sh/" target="_blank" rel="noopener noreferrer">Koordinator[1]</a> 继上次 <a href="https://mp.weixin.qq.com/s/YdoxVxz_91ZFemF8JuxRvQ" target="_blank" rel="noopener noreferrer">v0.6版本[2]</a> 发布后，经过 Koordinator 社区的努力，我们迎来了具有重大意义的 v0.7 版本。在这个版本中着重解决机器学习、大数据场景需要的任务调度能力，例如 CoScheduling、ElasticQuota和精细化的 GPU 共享调度能力。并在调度问题诊断分析方面得到了增强，重调度器也极大的提升了安全性，降低了重调度的风险。</p><h1>版本功能特性解读</h1><h2 class="anchor anchorWithStickyNavbar_mojV" id="1-任务调度">1. 任务调度<a class="hash-link" href="#1-任务调度" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_mojV" id="11-enhanced-coscheduling">1.1 Enhanced Coscheduling<a class="hash-link" href="#11-enhanced-coscheduling" title="Direct link to heading">​</a></h3><p>Gang scheduling是在并发系统中将多个相关联的进程调度到不同处理器上同时运行的策略，其最主要的原则是保证所有相关联的进程能够同时启动，防止部分进程的异常，导致整个关联进程组的阻塞。例如当提交一个Job时会产生多个任务，这些任务期望要么全部调度成功，要么全部失败。这种需求称为 All-or-Nothing，对应的实现被称作 Gang Scheduling(or Coscheduling) 。<br>Koordinator 在启动之初，期望支持 Kubernetes 多种工作负载的混部调度，提高工作负载的运行时效率和可靠性，其中就包括了机器学习和大数据领域中广泛存在的具备 All-or-Nothing 需求的作业负载。 为了解决 All-or-Nothing 调度需求，Koordinator v0.7.0 基于社区已有的 Coscheduling 实现了 Enhanced Coscheduling。<br>Enhanced Coscheduling 秉承着 Koordiantor 兼容社区的原则，完全兼容社区 Coscheduling 和 依赖的 PodGroup CRD。已经使用 PodGroup 的用户可以无缝升级到 Koordinator。<br>除此之外，Enhanced Coscheduling 还实现了如下增强能力：</p><h4 class="anchor anchorWithStickyNavbar_mojV" id="支持-strict-和-nonstrict-两种模式">支持 <code>Strict</code> 和 <code>NonStrict</code> 两种模式<a class="hash-link" href="#支持-strict-和-nonstrict-两种模式" title="Direct link to heading">​</a></h4><p>两种模式的区别在于 <code>Strict</code>模式（即默认模式）下调度失败会 Reject 所有分配到资源并处于 Wait 状态的 Pod，而 <code>NonStrict</code> 模式不会发起 Reject。NonStrict 模式下，同属于一个 PodGroup 的 Pod A 和 PodB 调度时，如果 PodA 调度失败不会影响 PodB 调度， PodB 还会继续被调度。NonStrict 模式对于体量较大的 Job 比较友好，可以让这种大体量 Job 更快的调度完成，但同时也增加了资源死锁的风险。后续 Koordinator 会提供 NonStrict 模式下解决死锁的方案实现。 <br>用户在使用时，可以在 PodGroup 或者 Pod 中追加 annotation <code>gang.scheduling.koordinator.sh/mode=NonStrict</code>开启 NonStrict 模式。</p><h4 class="anchor anchorWithStickyNavbar_mojV" id="改进-podgroup-调度失败的处理机制实现更高效的重试调度">改进 PodGroup 调度失败的处理机制，实现更高效的重试调度<a class="hash-link" href="#改进-podgroup-调度失败的处理机制实现更高效的重试调度" title="Direct link to heading">​</a></h4><p>举个例子，PodGroup A 关联了5个Pod，其中前3个Pod通过Filter/Score，进入Wait阶段，第4个Pod调度失败，当调度第5个Pod时，发现第4个Pod已经失败，则拒绝调度。在社区 Coscheduling 实现中，调度失败的PodGroup 会加入到基于cache机制的 lastDeniedPG  对象中，当 cache 没有过期，则会拒绝调度；如果过期就允许继续调度。可以看到 cache 的过期时间很关键，过期时间设置的过长会导致Pod迟迟得不到调度机会，设置的过短会出现频繁的无效调度。<br>而在Enhanced Coscheduling 中，实现了一种基于 ScheduleCycle 的重试机制。以上场景为例，5个Pod的 ScheduleCycle 初始值为 0，PodGroup 对应的 ScheduleCycle 初始值为1；当每一次尝试调度 Pod 时，都会更新 Pod ScheduleCycle 为 PodGroup ScheduleCycle。如果其中一个 Pod 调度失败，会标记当前的 PodGroup ScheduleCycle 无效，之后所有小于 PodGroup ScheduleCycle 的 Pod 都会被拒绝调度。当同一个 PodGroup 下的所有 Pod 都尝试调度一轮后，Pod ScheduleCycle 都更新为当前 PodGroup ScheduleCycle，并递进 PodGroup ScheduleCycle，并标记允许调度。这种方式可以有效规避基于过期时间的缺陷，完全取决于调度队列的配置重试调度。<br><img loading="lazy" alt="image.png" src="/assets/images/gang-schedulue-cycle-597c5d13e7b13ec4e2e0752bc8e0678d.png" title="基于 ScheduleCycle 的重试机制" width="3078" height="922"></p><h4 class="anchor anchorWithStickyNavbar_mojV" id="支持多个-podgroup-为一组完成-gang-scheduling">支持多个 PodGroup 为一组完成 Gang Scheduling<a class="hash-link" href="#支持多个-podgroup-为一组完成-gang-scheduling" title="Direct link to heading">​</a></h4><p>一些复杂的 Job 有多种角色，每个角色管理一批任务，每个角色的任务要求支持 All-or-Nothing ，每个角色的 MinMember 要求也不一样，并且每个角色之间也要求 All-or-Nothing。这就导致每个角色都有一个对应的 PodGroup ，并且还要求 PodGroup 即使满足了也需要等待其他角色的 PodGroup 必须满足。社区 Coscheduling 无法满足这种场景需求。而 Koordinator 实现的 Enhanced Coscheduling 支持用户在多个 PodGroup 中增加 anntation 相关关联实现，并支持跨Namespace。例如用户有2个PodGroup ，名字分别是PodGroupA和PodGroupB，可以按照如下例子关联两个 PodGroup：</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> PodGroup</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> podGroupA</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> default</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">annotations</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">gang.scheduling.koordinator.sh/groups</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"namespaceA/podGroupA"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"namespaceB/podGroupB"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">...</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h4 class="anchor anchorWithStickyNavbar_mojV" id="支持轻量化-gang-协议">支持轻量化 Gang 协议<a class="hash-link" href="#支持轻量化-gang-协议" title="Direct link to heading">​</a></h4><p>如果用户不希望创建 PodGroup，认为创建 PodGroup 太繁琐，那么可以考虑在一组 Pod 中填充相同 annotation  <code>gang.scheduling.koordinator.sh/name=&lt;podGroupName&gt;</code> 表示这一组 Pod 使用 Coscheduling 调度。如果期望设置 minMember ，可以追加 Annotation <code>gang.scheduling.koordinator.sh/min-available=&lt;availableNum&gt;</code>。举个例子：</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">annotations</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">gang.scheduling.koordinator.sh/name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pod-group-a"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">gang.scheduling.koordinator.sh/min-available</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"5"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> demo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> default</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">...</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="12-elasticquota-scheduling">1.2 ElasticQuota Scheduling<a class="hash-link" href="#12-elasticquota-scheduling" title="Direct link to heading">​</a></h3><p>一家中大型公司内有多个产品和研发团队，共用多个比较大规模的 Kubernetes 集群，这些集群内含有的大量 CPU/Memory/Disk 等资源被资源运营团队统一管理。运营团队往往在采购资源前，通过额度预算的机制让公司内每个团队根据自身的需求提交额度预算。业务团队此时一般根据业务当前和对未来的预期做好额度预算。最理想的情况是每一份额度都能够被使用，但现实告诉我们这是不现实的。往往出现的问题是：</p><ol><li>团队 A 高估了业务的发展速度，申请了太多的额度用不完</li><li>团队 B 低估了业务的发展速度，申请的额度不够用</li><li>团队 C 安排了一场活动，手上的额度不够多了，但是活动只持续几周，申请太多额度和资源也会浪费掉。</li><li>团队 D 下面还有各个子团队和业务，每个子团队内也会出现类似A B C 三个团队的情况，而且其中有些团队的业务临时突发需要提交一些计算任务要交个客户，但是没有额度了，走额度预算审批也不够了。</li><li>......</li></ol><p>以上大家日常经常遇到的场景，在混部场景、大数据场景，临时性突发需求又是时常出现的，这些资源的需求都给额度管理工作带来了极大的挑战。做好额度管理工作，一方面避免过度采购资源降低成本，又要在临时需要额度时不采购资源或者尽量少的采购资源；另一方面不能因为额度问题限制资源使用率，额度管理不好就会导致即使有比较好的技术帮助复用资源，也无法发挥其价值。 总之，额度管理工作是广大公司或组织需长期面对且必须面对的问题。<br>Kubernetes ResourceQuota 可以解决额度管理的部分问题。 原生 Kubernetes ResourceQuota API 用于指定每个 Namespace 的最大资源额度量，并通过 admission 机制完成准入检查。如果 Namespace 当前资源分配总量超过ResourceQuota 指定的配额，则拒绝创建 Pod。 Kubernetes ResourceQuota 设计有一个局限性：Quota  用量是按照 Pod Requests 聚合的。 虽然这种机制可以保证实际的资源消耗永远不会超过 ResourceQuota 的限制，但它可能会导致资源利用率低，因为一些 Pod 可能已经申请了资源但未能调度。 <br>Kuberenetes Scheduler-Sig 后来给出了一个借鉴 Yarn Capacity Scheduling，称作 ElasticQuota 的设计方案并给出了具体的实现。允许用户设置 max 和 min：</p><ul><li>max 表示用户可以消费的资源上限</li><li>min 表示需要保障用户实现基本功能/性能所需要的最小资源量</li></ul><p>通过这两个参数可以帮助用户实现如下的需求：</p><ol><li>用户设置 min &lt; max 时，当有突发资源需求时，即使当前 ElasticQuota 的总用量超过了 min， 但只要没有达到 max，那么用户可以继续创建新的 Pod 应对新的任务请求。</li><li>当用户需要更多资源时，用户可以从其他 ElasticQuota 中“借用(borrow)” 还没有被使用并且需要通保障的 min。</li><li>当一个 ElasticQuota 需要使用 min 资源时，会通过抢占机制从其他借用方抢回来，即驱逐一些其他ElasticQuota 超过 min 用量的 Pod。</li></ol><p>ElasticQuota 还有一些局限性：没有很好的保障公平性。假如同一个 ElasticQuota 有大量新建的Pod，有可能会消耗所有其他可以被借用的Quota，从而导致后来的 Pod 可能拿不到 Quota。此时只能通过抢占机制抢回来一些 Quota。<br>另外 ElasticQuota 和 Kubernetes ResourceQuota 都是面向 Namespace的，不支持多级树形结构，对于一些本身具备复杂组织关系的企业/组织不能很好的使用ElasticQuota/Kubenretes ResourceQuota 完成额度管理工作。<br>Koordinator 针对这些额度管理问题，给出了一种基于社区 ElasticQuota 实现的支持多级管理方式的弹性Quota管理机制(multi hierarchy quota management)。具备如下特性：</p><ul><li>兼容社区的 ElasticQuota API。用户可以无缝升级到 Koordinator</li><li>支持树形结构管理 Quota。</li><li>支持按照共享权重(shared weight)保障公平性。</li><li>允许用户设置是否允许借用Quota 给其他消费对象。</li></ul><h4 class="anchor anchorWithStickyNavbar_mojV" id="pod-关联-elasticquota-方式">Pod 关联 ElasticQuota 方式<a class="hash-link" href="#pod-关联-elasticquota-方式" title="Direct link to heading">​</a></h4><p>用户可以非常使用的使用该能力，可以完全按照 ElasticQuota 的用法，即每个 Namespace 设置一个 ElasticQuota 对象。也可以在 Pod 中追加 Label 关联 ElasticQuota：</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">quota.scheduling.koordinator.sh/name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"elastic-quota-a"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> demo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> default</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">...</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h4 class="anchor anchorWithStickyNavbar_mojV" id="树形结构管理机制和使用方法">树形结构管理机制和使用方法<a class="hash-link" href="#树形结构管理机制和使用方法" title="Direct link to heading">​</a></h4><p>需要使用树形结构管理 Quota 时，需要在 ElasticQuota 中追加 Label  <code>quota.scheduling.koordinator.sh/is-parent</code>表示当前 ElasticQuota 是否是父节点，<code>quota.scheduling.koordinator.sh/parent</code>表示当前 ElasticQuota 的父节点 ElasticQuota 的名字。举个例子：<br><img loading="lazy" alt="image.png" src="/assets/images/quota-tree-f8a3e073d27f66f203a45236769b9f58.png" width="2256" height="1156"><br>我们创建一个 ElasticQuota Root 作为根节点，资源总量为CPU 100C，内存200Gi，以及子节点 quota-a</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> scheduling.sigs.k8s.io/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ElasticQuota</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> parentA</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> default</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">quota.scheduling.koordinator.sh/is-parent</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"true"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">quota.scheduling.koordinator.sh/allow-lent-resource</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"true"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">max</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">cpu</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">memory</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 200Gi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">min</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">cpu</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">memory</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 200Gi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> scheduling.sigs.k8s.io/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ElasticQuota</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> childA1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> default</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">quota.scheduling.koordinator.sh/is-parent</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"false"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">quota.scheduling.koordinator.sh/parent</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"parentA"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">quota.scheduling.koordinator.sh/allow-lent-resource</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"true"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">max</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">cpu</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">40</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">memory</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 100Gi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">min</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">cpu</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">memory</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 40Gi</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>在使用树形结构管理 ElasticQuota 时，有一些需要遵循的约束：</p><ol><li>除了根节点，其他所有子节点的 min 之和要小于父节点的 min。</li><li>不限制子节点 max，允许子节点的 max 大于父节点的 max。考虑以下场景，集群中有 2 个 ElasticQuota 子树：dev-parent 和 production-parent，每个子树都有几个子 ElasticQuota。 当 production-parent 忙时，我们可以通过只降低 dev-parent 的 max 限制  dev-parent 整颗子树的资源使用量，而不是降低 dev-parent 子树的每个子 ElasticQuota 的max限制用量。</li><li>Pod 不能使用父节点ElasticQuota。如果放开这个限制，会导致整个弹性 Quota 的机制变的异常复杂，暂时不考虑支持这种场景。</li><li>只有父节点可以挂子节点，不允许子节点挂子节点</li><li>暂时不允许改变 ElasticQuota 的 <code>quota.scheduling.koordinator.sh/is-parent</code>属性</li></ol><p>我们将在下个版本中通过 webhook 机制实现这些约束。</p><h4 class="anchor anchorWithStickyNavbar_mojV" id="公平性保障机制">公平性保障机制<a class="hash-link" href="#公平性保障机制" title="Direct link to heading">​</a></h4><p>为了方便阅读和理解将要介绍的公平性保障机制，先明确几个新概念：</p><ul><li>request 表示同一个 ElasticQuota 关联的所有 Pod 的资源请求量。如果一个 ElasticQuota A 的 request 小于 min，ElasticQuota B 的 request 大于 min，那么 ElasticQuota A 未使用的部分，即 min - request 剩余的量通过公平性保障机制借用给 ElasticQuota B. 当 ElasticQuota A 需要使用这些借走的量时，要求 ElasticQuota B 依据公平性保障机制归还给 ElasticQuota A。</li><li>runtime 表示 ElasticQuota 当前可以使用的实际资源量。如果 request 小于 min，runtime 等于 request。这也意味着，需要遵循 min 语义，应无条件满足 request。如果 request 大于 min，且 min 小于 max，公平性保障机制会分配 runtime 在min 与 max 之前，即 max &gt;= runtime &gt;= min。</li><li>shared-weight 表示一个 ElasticQuota 的竞争力，默认等于 ElasticQuota Max。</li></ul><p>通过几个例子为大家介绍公平性保障机制的运行过程，假设当前集群的 CPU 总量为100C，并且有4个ElasticQuota，如下图所示，绿色部分为 Request 量：A 当前的request 为5，B当前的request为20，C当前的Request为30，D当前的Request为70。<br><img loading="lazy" alt="image.png" src="/assets/images/quota-init-example-f430132dc764dc42583bca4042c06af4.png" width="1338" height="732"><br>并且我们注意到， A, B, C, D 的 min 之和是60，剩下 40 个空闲额度， 同时 A 还可以借给 B, C, D 5个额度，所以一共有45个额度被B，C，D共享，根据各个ElasticQuota的 shared-weight，B，C，D分别对应60，50和80，计算出各自可以共享的量：</p><ul><li>B 可以获取 14个额度， 45 * 60 / (60 + 50 + 80) = 14</li><li>C 可以获取 12个额度， 45 * 50 / (60 + 50 + 80) = 12</li><li>D 可以获取 19个额度， 45 * 80 / (60 + 50 + 80) = 19</li></ul><p><img loading="lazy" alt="image.png" src="/assets/images/quota-init-runtime-example-e5701da3ac0576ceb3dba51e52021c06.png" width="1444" height="736"><br>但我们也要注意的是，C和D需要更多额度，而 B只需要5个额度就能满足 Request，并且 B 的min是15，也就意味着我们只需要给 B 5个额度，剩余的9个额度继续分给C和D。</p><ul><li>C 可以获取 3个额度， 9 * 50 / (50 + 80) = 3</li><li>D 可以获取 6个额度，  9 * 80 / (50 + 80) = 6</li></ul><p><a href="https://github.com/koordinator-sh/koordinator/blob/main/docs/images/runtimequota3.jpg" target="_blank" rel="noopener noreferrer"><img src="https://github.com/koordinator-sh/koordinator/raw/main/docs/images/runtimequota3.jpg#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=url&amp;id=XJyFI&amp;margin=%5Bobject%20Object%5D&amp;originHeight=782&amp;originWidth=1570&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title="></a><br>最终我们得出如下的分配结果结果：</p><ul><li>A runtime = 5</li><li>B runtime = 20</li><li>C runtime = 35</li><li>D runtime = 40</li></ul><p><a href="https://github.com/koordinator-sh/koordinator/blob/main/docs/images/runtimequota4.jpg" target="_blank" rel="noopener noreferrer"><img src="https://github.com/koordinator-sh/koordinator/raw/main/docs/images/runtimequota4.jpg#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=url&amp;id=J8tN9&amp;margin=%5Bobject%20Object%5D&amp;originHeight=778&amp;originWidth=1560&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title="></a><br>总结整个过程可以知道：</p><ol><li>当前 request &lt; min 时，需要借出 lent-to-quotas；当 request &gt; min 时，需要借入 borrowed-qutoas</li><li>统计所有 runtime &lt; min 的 Quota，这些总量就是接下来可被借出的量。</li><li>根据 shared-weight 计算每个ElasticQuota可以借入的量</li><li>如果最新的 runtime &gt; reuqest，那么 runtime - request 剩余的量可以借给更需要的对象。</li></ol><p>另外还有一种日常生产时会遇到的情况：即集群内资源总量会随着节点故障、资源运营等原因降低，导致所有ElasticQuota的 min 之和大于资源总量。当出现这种情况时，我们无法确保 min 的资源述求。此时我们会按照一定的比例调整各个ElasticQuota的min，确保所有min之和小于或者等于当前实际的资源总量。</p><h4 class="anchor anchorWithStickyNavbar_mojV" id="抢占机制">抢占机制<a class="hash-link" href="#抢占机制" title="Direct link to heading">​</a></h4><p>Koordinator ElasticQuota 机制在调度阶段如果发现 Quota 不足，会进入抢占阶段，按照优先级排序，抢占属于同一个ElasticQuota 内的 低优先级 Pod。 同时，我们不支持跨 ElasticQuota 抢占其他 Pod。但是我们也提供了另外的机制支持从借用 Quota 的 ElasticQuota 抢回。<br>举个例子，在集群中，有两个 ElasticQuota，ElasticQuota A {min = 50, max = 100}， ElasticQuota B {min = 50,  max = 100}。用户在上午10点使用 ElasticQuota A 提交了一个 Job， Request = 100 ，此时因为 ElasticQuota B 无人使用，ElasticQuota A 能从 B 手里借用50个Quota，满足了 Request = 100， 并且此时 Used = 100。在11点钟时，另一个用户开始使用 ElasticQuota B 提交Job，Request = 100，因为 ElasticQuota B 的 min = 50，是必须保障的，通过公平性保障机制，此时 A 和 B 的 runtime 均为50。那么此时对于 ElasticQuota A ，Used = 100 是大于当前 runtime = 50 的，因此我们会提供一个 Controller，驱逐掉一部分 Pod ，使得当前 ElasticQuota A 的 Used 降低到 runtime 相等的水位。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="2-精细化资源调度">2. 精细化资源调度<a class="hash-link" href="#2-精细化资源调度" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_mojV" id="device-share-scheduling">Device Share Scheduling<a class="hash-link" href="#device-share-scheduling" title="Direct link to heading">​</a></h3><p>机器学习领域里依靠大量强大算力性能的 GPU 设备完成模型训练，但是 GPU 自身价格十分昂贵。如何更好地利用GPU设备，发挥GPU的价值，降低成本，是一个亟待解决的问题。  Kubernetes 社区现有的 GPU 分配机制中，GPU 是由 kubelet 分配的，并只支持分配一个或多个完整的 GPU 实例。 这种方法简单可靠，但类似于 CPU 和 Memory，GPU 并不是一直处于高利用率水位，同样存在资源浪费的问题。 因此，Koordinator 希望支持多工作负载共享使用 GPU 设备以节省成本。 此外，GPU 有其特殊性。 比如下面的 NVIDIA GPU 支持的 NVLink 和超卖场景，都需要通过调度器进行中央决策，以获得全局最优的分配结果。<br><img loading="lazy" alt="image.png" src="/assets/images/nvlink-87c3973857a32b2efaa5dd2f714766b2.png" width="2222" height="828"></p><p>从图中我们可以发现，虽然该节点有8个 GPU 实例，型号为A100/V100，但 GPU 实例之间的数据传输速度是不同的。 当一个 Pod 需要多个 GPU 实例时，我们可以为 Pod 分配具有最大数据传输速度组合关系的 GPU 实例。 此外，当我们希望一组 Pod 中的 GPU 实例具有最大数据传输速度组合关系时，调度器应该将最佳 GPU 实例批量分配给这些 Pod，并将它们分配到同一个节点。</p><h4 class="anchor anchorWithStickyNavbar_mojV" id="gpu-资源协议">GPU 资源协议<a class="hash-link" href="#gpu-资源协议" title="Direct link to heading">​</a></h4><p>Koordinator 兼容社区已有的 <code>nvidia.com/gpu</code>资源协议，并且还自定义了扩展资源协议，支持用户更细粒度的分配 GPU 资源。</p><ul><li>kubernetes.io/gpu-core 代表GPU的计算能力。 与 Kuberetes MilliCPU 类似，我们将 GPU 的总算力抽象为100，用户可以根据需要申请相应数量的 GPU 算力。</li><li>kubernetes.io/gpu-memory 表示 GPU 的内存容量，以字节为单位。</li><li>kubernetes.io/gpu-memory-ratio 代表 GPU 内存的百分比。</li></ul><p>假设一个节点有4个GPU设备实例，每个GPU设备实例有 8Gi 显存。用户如果期望申请一个完整的 GPU 实例，除了使用 <code>nvidia.com/gpu</code>之外，还可以按照如下方式申请：</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> demo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> default</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">resources</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">limits</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">kubernetes.io/gpu-core</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">kubernetes.io/gpu-memory</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"8Gi"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">requests</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">kubernetes.io/gpu-core</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">kubernetes.io/gpu-memory</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"8Gi"</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>如果期望只使用一个 GPU 实例一半的资源，可以按照如下方式申请：</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> demo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> default</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">resources</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">limits</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">kubernetes.io/gpu-core</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">50</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">kubernetes.io/gpu-memory</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"4Gi"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">requests</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">kubernetes.io/gpu-core</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">50</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">kubernetes.io/gpu-memory</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"4Gi"</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h4 class="anchor anchorWithStickyNavbar_mojV" id="设备信息和设备容量上报">设备信息和设备容量上报<a class="hash-link" href="#设备信息和设备容量上报" title="Direct link to heading">​</a></h4><p>在 Koordinator v0.7.0 版本中，单机侧 koordlet 安装后会自动识别节点上是否含有 GPU 设备，如果存在的话，会上报这些 GPU 设备的 Minor ID、 UUID、算力和显存大小到一个类型为 Device CRD 中。每个节点对应一个 Device CRD 实例。Device CRD 不仅支持描述 GPU，还支持类似于 FPGA/RDMA等设备类型，目前 v0.7.0 版本只支持 GPU， 暂未支持这些设备类型。 <br>Device CRD 会被 koord-manager 内的 NodeResource controller 和 koord-scheduler 消费。NodeResource controller 会根据 Device CRD 中描述的信息，换算成 Koordinator 支持的资源协议 <code>kubernetes.io/gpu-core</code>,<code>kubernetes.io/gpu-memory</code> 更新到  Node.Status.Allocatable 和 Node.Status.Capacity 字段，帮助调度器和 kubelet 完成资源调度。gpu-core 表示GPU 设备实例的算力，一个实例的完整算力为100。假设一个节点有 8 个 GPU 设备实例，那么节点的 gpu-core 容量为 8 <em> 100 = 800； gpu-memory 表示 GPU 设备实例的显存大小，单位为字节，同样的节点可以分配的显存总量为 设备数量 </em> 每个实例的单位容量，例如一个 GPU 设备的显存是 8G，节点上有8 个 GPU 实例，总量为 8 * 8G = 64G。</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Node</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> node</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">a</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">status</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">capacity</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">koordinator.sh/gpu-core</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">800</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">koordinator.sh/gpu-memory</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"64Gi"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">koordinator.sh/gpu-memory-ratio</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">800</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">allocatable</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">koordinator.sh/gpu-core</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">800</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">koordinator.sh/gpu-memory</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"64Gi"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">koordinator.sh/gpu-memory-ratio</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">800</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h4 class="anchor anchorWithStickyNavbar_mojV" id="中心调度分配设备资源">中心调度分配设备资源<a class="hash-link" href="#中心调度分配设备资源" title="Direct link to heading">​</a></h4><p>Kuberetes 社区原生提供的设备调度机制中，调度器只负责校验设备容量是否满足 Pod，对于一些简单的设备类型是足够的，但是当需要更细粒度分配 GPU 时，需要中心调度器给予支持才能实现全局最优。<br>Koordinator 调度器 koord-scheduler 新增了调度插件 DeviceShare，负责精细度设备资源调度。DeviceShare 插件消费 Device CRD，记录每个节点可以分配的设备信息。DeviceShare 在调度时，会把 Pod 的GPU资源请求转换为 Koordinator 的资源协议，并过滤每个节点的未分配的 GPU 设备实例。确保有资源可用后，在 Reserve 阶段更新内部状态，并在 PreBind 阶段更新 Pod Annotation，记录当前 Pod 应该使用哪些 GPU 设备。<br>DeviceShare 将在后续版本支持 Binpacking  和 Spread 策略，实现更好的设备资源调度能力。</p><h4 class="anchor anchorWithStickyNavbar_mojV" id="单机侧精准绑定设备信息">单机侧精准绑定设备信息<a class="hash-link" href="#单机侧精准绑定设备信息" title="Direct link to heading">​</a></h4><p>Kubernetes 社区在 kubelet 中提供了 DevicePlugin 机制，支持设备厂商在 kubelet 分配好设备后有机会获得设备信息，并填充到环境变量或者更新挂载路径。但是不能支持 中心化的 GPU 精细化调度场景。<br>针对这个问题， Koordinator 扩展了 koord-runtime-proxy ，支持在 kubelet 创建容器时更新环境变量，注入调度器分配的 GPU 设备信息。<br><img loading="lazy" src="/assets/images/koordlet-inject-env-80dc8617520f3b4f4ce0bff46548d467.jpeg" width="1394" height="700"></p><h2 class="anchor anchorWithStickyNavbar_mojV" id="3-调度器诊断分析">3. 调度器诊断分析<a class="hash-link" href="#3-调度器诊断分析" title="Direct link to heading">​</a></h2><p>大家在使用 Kubernetes 时经常会遇到一些调度相关的问题：</p><ol><li>我这个 Pod 为什么不能调度？</li><li>这个 Pod 为什么会调度到这个节点，不是应该被另一个打分插件影响到么？ </li><li>我新开发了一个插件，发现调度结果不符合预期，但是有不知道哪里出了问题。</li></ol><p>要诊断分析这些问题，除了要掌握 Kubernetes 基本的调度机制和资源分配机制外，还需要调度器自身给予支持。但是 Kubernetes kube-scheduler 提供的诊断能力比较有限，有时候甚至没有什么日志可以查看。kube-scheduler 原生是支持通过 HTTP 更改日志等级，可以获得更多日志信息，例如执行如下命令可以更改日志等级到5：</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> -X PUT schedulerLeaderIP:10251/debug/flags/v --data </span><span class="token string" style="color:#e3116c">'5'</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">successfully </span><span class="token builtin class-name">set</span><span class="token plain"> klog.logging.verbosity to </span><span class="token number" style="color:#36acaa">5</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Koordinator 针对这些问题，实现了一套 Restful API ，帮助用户提升问题诊断分析的效率</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="分析-score-结果">分析 Score 结果<a class="hash-link" href="#分析-score-结果" title="Direct link to heading">​</a></h3><p><code>PUT /debug/flags/s</code>  允许用户打开 Debug Score 开关，在打分结束后，以Markdown 格式打印 TopN 节点各个插件的分值。例如：</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> -X PUT schedulerLeaderIP:10251/debug/flags/s --data </span><span class="token string" style="color:#e3116c">'100'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">successfully </span><span class="token builtin class-name">set</span><span class="token plain"> debugTopNScores to </span><span class="token number" style="color:#36acaa">100</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p> 当有新 Pod 调度时，观察 scheduler log 可以看到如下信息</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># | Pod | Node | Score | ImageLocality | InterPodAffinity | LoadAwareScheduling | NodeAffinity | NodeNUMAResource | NodeResourcesBalancedAllocation | NodeResourcesFit | PodTopologySpread | Reservation | TaintToleration |</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> --- </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> --- </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> --- </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> ---:</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> ---:</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> ---:</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> ---:</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> ---:</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> ---:</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> ---:</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> ---:</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> ---:</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> ---:</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> ---:</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> default/curlimage-545745d8f8-rngp7 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> cn-hangzhou.10.0.4.51 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">577</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">87</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">96</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">94</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">200</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> default/curlimage-545745d8f8-rngp7 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> cn-hangzhou.10.0.4.50 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">574</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">85</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">96</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">93</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">200</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> default/curlimage-545745d8f8-rngp7 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> cn-hangzhou.10.0.4.19 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">541</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">55</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">95</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">91</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">200</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> default/curlimage-545745d8f8-rngp7 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> cn-hangzhou.10.0.4.18 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">487</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">90</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">82</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">200</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>找个 Markdown 工具，就可以转为如下表格</p><table><thead><tr><th>#</th><th>Pod</th><th>Node</th><th>Score</th><th>LoadAwareScheduling</th><th>NodeNUMAResource</th><th>NodeResourcesFit</th><th>PodTopologySpread</th></tr></thead><tbody><tr><td>0</td><td>default/curlimage-545745d8f8-rngp7</td><td>cn-hangzhou.10.0.4.51</td><td>577</td><td>87</td><td>0</td><td>94</td><td>200</td></tr><tr><td>1</td><td>default/curlimage-545745d8f8-rngp7</td><td>cn-hangzhou.10.0.4.50</td><td>574</td><td>85</td><td>0</td><td>93</td><td>200</td></tr><tr><td>2</td><td>default/curlimage-545745d8f8-rngp7</td><td>cn-hangzhou.10.0.4.19</td><td>541</td><td>55</td><td>0</td><td>91</td><td>200</td></tr><tr><td>3</td><td>default/curlimage-545745d8f8-rngp7</td><td>cn-hangzhou.10.0.4.18</td><td>487</td><td>15</td><td>0</td><td>82</td><td>200</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_mojV" id="调度插件导出内部状态">调度插件导出内部状态<a class="hash-link" href="#调度插件导出内部状态" title="Direct link to heading">​</a></h3><p>像 koord-scheduler 内部的 NodeNUMAResource 、 DeviceShare和ElasticQuota等插件内部都有维护一些状态帮助调度。 koord-scheduler 自定义了一个新的插件扩展接口（定义见下文），并会在初始化插件后，识别该插件是否实现了该接口并调用该接口，让插件注入需要暴露的 RestfulAPI。以 NodeNUMAResource 插件为例，会提供 <code>/cpuTopologyOptions/:nodeName</code>和 <code>/availableCPUs/:nodeName</code>两个Endpoints，可以查看插件内部记录的 CPU 拓扑信息和分配结果。</p><div class="codeBlockContainer_I0IT language-go theme-code-block"><div class="codeBlockContent_wNvx go"><pre tabindex="0" class="prism-code language-go codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> APIServiceProvider </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">RegisterEndpoints</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">group </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">gin</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">RouterGroup</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>用户在使用时，按照 <code>/apis/v1/plugins/&lt;pluginName&gt;/&lt;pluginEndpoints&gt;</code>方 式构建 URL 查看数据，例如要查看 <code>/cpuTopologyOptions/:nodeName</code>：</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> schedulerLeaderIP:10252/apis/v1/plugins/NodeNUMAResources/cpuTopologyOptions/node-1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"cpuTopology"</span><span class="token plain">:</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"numCPUs"</span><span class="token plain">:32,</span><span class="token string" style="color:#e3116c">"numCores"</span><span class="token plain">:16,</span><span class="token string" style="color:#e3116c">"numNodes"</span><span class="token plain">:1,</span><span class="token string" style="color:#e3116c">"numSockets"</span><span class="token plain">:1,</span><span class="token string" style="color:#e3116c">"cpuDetails"</span><span class="token plain">:</span><span class="token punctuation" style="color:#393A34">..</span><span class="token punctuation" style="color:#393A34">..</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="查看当前支持的插件-api">查看当前支持的插件 API<a class="hash-link" href="#查看当前支持的插件-api" title="Direct link to heading">​</a></h3><p>为了方便大家使用，koord-scheduler 提供了 <code>/apis/v1/__services__</code> 查看支持的 API Endpoints</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> schedulerLeaderIP:10251/apis/v1/__services__</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"GET"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"/apis/v1/__services__"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"/apis/v1/nodes/:nodeName"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"/apis/v1/plugins/Coscheduling/gang/:namespace/:name"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"/apis/v1/plugins/DeviceShare/nodeDeviceSummaries"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"/apis/v1/plugins/DeviceShare/nodeDeviceSummaries/:name"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"/apis/v1/plugins/ElasticQuota/quota/:name"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"/apis/v1/plugins/NodeNUMAResource/availableCPUs/:nodeName"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"/apis/v1/plugins/NodeNUMAResource/cpuTopologyOptions/:nodeName"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="4-更安全的重调度">4. 更安全的重调度<a class="hash-link" href="#4-更安全的重调度" title="Direct link to heading">​</a></h2><p>在 Koordinator v0.6 版本中我们发布了全新的 koord-descheduler，支持插件化实现需要的重调度策略和自定义驱逐机制，并内置了面向 PodMigrationJob 的迁移控制器，通过 Koordinator Reservation 机制预留资源，确保有资源的情况下发起驱逐。解决了 Pod 被驱逐后无资源可用影响应用的可用性问题。<br>Koordinator v0.7 版本中，koord-descheduler 实现了更安全的重调度</p><ul><li>支持 Evict 限流，用户可以根据需要配置限流策略，例如允许每分钟驱逐多少个 Pod</li><li>支持配置 Namespace 灰度重调度能力，让用户可以更放心的灰度</li><li>支持按照 Node/Namespace 配置驱逐数量，例如配置节点维度最多只驱逐两个，那么即使有插件要求驱逐该节点上的更多Pod，会被拒绝。</li><li>感知 Workload ，如果一个 Workload 正在发布、缩容、已经有一定量的 Pod 正在被驱逐或者一些Pod NotReady，重调度器会拒绝新的重调度请求。目前支持原生的 Deployment，StatefulSet 以及 Kruise  CloneSet，Kruise AdvancedStatefulSet。</li></ul><p>后续重调度器还会提升公平性，防止一直重复的重调度同一个 workload ，尽量降低重调度对应用的可用性的影响。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="5-其他改动">5. 其他改动<a class="hash-link" href="#5-其他改动" title="Direct link to heading">​</a></h2><ul><li>Koordinator 进一步增强了 CPU 精细化调度能力，完全兼容 kubelet ( &lt;= v1.22) CPU Manager static 策略。调度器分配 CPU 时会避免分配被 kubelet 预留的 CPU，单机侧koordlet完整适配了kubelet从1.18到1.22版本的分配策略，有效避免了 CPU 冲突。</li><li>资源预留机制支持 AllocateOnce 语义，满足单次预留场景。并改进了 Reservation 状态语义，更加准确描述 Reservation 对象当前的状态。</li><li>改进了离线资源(Batch CPU/Memory) 的声明方式，支持limit大于request的资源描述形式，可以方便原burstable类型的任务直接转换为混部模式运行。</li></ul><p>你可以通过 <a href="https://github.com/koordinator-sh/koordinator/releases/tag/v0.6.1" target="_blank" rel="noopener noreferrer">Github release[6]</a> 页面，来查看更多的改动以及它们的作者与提交记录。</p><h1>相关链接</h1><ul><li><a href="https://koordinator.sh" target="_blank" rel="noopener noreferrer">[1] Koordinator</a> </li><li><a href="https://mp.weixin.qq.com/s/YdoxVxz_91ZFemF8JuxRvQ" target="_blank" rel="noopener noreferrer">[2]  Koordinator 0.6 Release Note</a></li><li><a href="https://github.com/koordinator-sh/koordinator/blob/main/docs/proposals/scheduling/20220901-gang-scheduling.md" target="_blank" rel="noopener noreferrer">[3] Design: Gang Scheduling</a></li><li><a href="https://github.com/koordinator-sh/koordinator/blob/main/docs/proposals/scheduling/20220722-multi-hierarchy-elastic-quota-management.md" target="_blank" rel="noopener noreferrer">[4] Design: Multi Hierarchy ElasticQuota Management</a></li><li><a href="https://github.com/koordinator-sh/koordinator/blob/main/docs/proposals/scheduling/20220629-fine-grained-device-scheduling.md" target="_blank" rel="noopener noreferrer">[5] Design: Fine-grained Device Scheduling</a></li><li><a href="https://github.com/koordinator-sh/koordinator/releases/tag/v0.6.1" target="_blank" rel="noopener noreferrer">[6] Github Release</a></li><li><a href="https://join.slack.com/t/koordinator-sh/shared_invite/zt-1756qoub4-Cn4~esfdlfAPsD7cwO2NzA" target="_blank" rel="noopener noreferrer">[7] Slack Channel</a></li><li><a href="https://mp.weixin.qq.com/s/y8k_q6rhTIubQ-lqvDp2hw" target="_blank" rel="noopener noreferrer">[8] 云原生混部系统 Koordinator 架构详解</a></li></ul>]]></content>
        <author>
            <name>Joseph</name>
            <uri>https://github.com/eahydra</uri>
        </author>
        <category label="release" term="release"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Koordinator v0.6: Complete fine-grained CPU orchestration, Resource Reservation and Descheduling]]></title>
        <id>release-v0.6.0</id>
        <link href="https://koordinator.sh/blog/release-v0.6.0"/>
        <updated>2022-08-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We are happy to announce the release of Koordinator v0.6.0. Koordinator v0.6.0 brings complete Fine-grained CPU Orchestration, Resource Reservation mechanism, safely Pod Migration mechanism and Descheduling Framework.]]></summary>
        <content type="html"><![CDATA[<p>We are happy to announce the release of Koordinator v0.6.0. Koordinator v0.6.0 brings complete Fine-grained CPU Orchestration, Resource Reservation mechanism, safely Pod Migration mechanism and Descheduling Framework.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="install-or-upgrade-to-koordinator-v060">Install or Upgrade to Koordinator v0.6.0<a class="hash-link" href="#install-or-upgrade-to-koordinator-v060" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_mojV" id="install-with-helms">Install with helms<a class="hash-link" href="#install-with-helms" title="Direct link to heading">​</a></h3><p>Koordinator can be simply installed by helm v3.5+, which is a simple command-line tool, and you can get it
from <a href="https://github.com/helm/helm/releases" target="_blank" rel="noopener noreferrer">here</a>.</p><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Firstly add koordinator charts repository if you haven't do this.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> koordinator-sh https://koordinator-sh.github.io/charts/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># [Optional]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Install the latest version.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> koordinator koordinator-sh/koordinator --version </span><span class="token number" style="color:#36acaa">0.6</span><span class="token plain">.0</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="upgrade-with-helm">Upgrade with helm<a class="hash-link" href="#upgrade-with-helm" title="Direct link to heading">​</a></h3><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Firstly add koordinator charts repository if you haven't do this.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> koordinator-sh https://koordinator-sh.github.io/charts/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># [Optional]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Upgrade the latest version.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm upgrade koordinator koordinator-sh/koordinator --version </span><span class="token number" style="color:#36acaa">0.6</span><span class="token plain">.0 </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">--force</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>For more details, please refer to the <a href="/docs/installation">installation manual</a>.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="fine-grained-cpu-orchestration">Fine-grained CPU Orchestration<a class="hash-link" href="#fine-grained-cpu-orchestration" title="Direct link to heading">​</a></h2><p>In Koordinator v0.5.0, we designed and implemented basic CPU orchestration capabilities. The koord-scheduler supports different CPU bind policies to help LSE/LSR Pods achieve better performance. </p><p>Now in the v0.6 version, we have basically completed the CPU orchestration capabilities originally designed, such as:</p><ul><li>Support default CPU bind policy configured by koord-scheduler for LSR/LSE Pods that do not specify a CPU bind policy</li><li>Support CPU exclusive policy that supports <code>PCPULevel</code> and <code>NUMANodeLevel</code>, which can spread the CPU-bound Pods to different physical cores or NUMA Nodes as much as possible to reduce the interference between Pods.</li><li>Support Node CPU Orchestration API to helper cluster administrators control the CPU orchestration behavior of nodes. The label <code>node.koordinator.sh/cpu-bind-policy</code> constrains how to bind CPU logical CPUs when scheduling. If set with the <code>FullPCPUsOnly</code> that requires that the scheduler must allocate full physical cores. Equivalent to kubelet CPU manager policy option <code>full-pcpus-only=true</code>. If there is no <code>node.koordinator.sh/cpu-bind-policy</code> in the node's label, it will be executed according to the policy configured by the Pod or koord-scheduler. The label <code>node.koordinator.sh/numa-allocate-strategy</code> indicates how to choose satisfied NUMA Nodes when scheduling. Support <code>MostAllocated</code> and <code>LeastAllocated</code>.</li><li>koordlet supports the LSE Pods and improve compatibility with existing Guaranteed Pods with static CPU Manager policy. </li></ul><p>Please check out our <a href="/docs/user-manuals/fine-grained-cpu-orchestration">user manual</a> for a detailed introduction and
tutorial.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="resource-reservation">Resource Reservation<a class="hash-link" href="#resource-reservation" title="Direct link to heading">​</a></h2><p>We completed the <code>Resource Reservation API</code> design proposal in v0.5, and implemented the basic Reservation mechanism in the current v0.6 version. </p><p>When you want to use the Reservation mechanism to reserve resources, you do not need to modify the Pod or the existing workloads(e.g. Deployment, StatefulSet). koord-scheduler provides a simple to use API named <code>Reservation</code>, which allows us to reserve node resources for specified pods or workloads even if they haven't get created yet. You only need to write the Pod Template and the owner information in the ReservationSpec when creating a Reservation. When koord-scheduler perceives a new Reservation object, it will allocate resources to the Reservation object through the normal Pod scheduling process. After scheduling, koord-scheduler will update the success or failure information to ResourceStatus. If the reservation is successful, and the OwnerReference or Labels of the newly created Pod satisfy the owner information declared earlier, then the newly created Pod will directly reuse the resources held by the Reservation. When the Pod is destroyed, the Reservation object can be reused until the Reservation expires.</p><p><img loading="lazy" alt="image" src="/assets/images/resource-reservation-0c5a187530dd5e3dc9c6e96f97add1ba.svg" width="511" height="371"></p><p>The resource reservation mechanism can help solve or optimize the problems in the following scenarios:</p><ol><li>Preemption: Existing preemption does not guarantee that only preempting pods can allocate preempted resources. With a
reservation, the scheduler should be able to "lock" resources preventing from allocation of other pods with the same
or higher priority.</li><li>Descheduling: For the descheduler, it is better to ensure sufficient resources with the reservation before pods get
rescheduled. Otherwise, rescheduled pods may not be runnable anymore and make the belonging application disrupted.</li><li>Horizontal scaling: Using reservation to achieve more deterministic horizontal scaling. e.g. Submit a reservation and
make sure it is available before scaling up replicas.</li><li>Resource Pre-allocation: Sometimes we want to pre-allocate node resources for future resource demands even if the
resources are not currently allocatable. Reservation can help with this and it should make no physical cost.</li></ol><ul><li>Please check out our <a href="/docs/user-manuals/resource-reservation">user manual</a> for a detailed introduction and
tutorial.</li><li>For more information, please see <a href="/docs/designs/resource-reservation">Design: Resource Reservation</a></li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="pod-migration-job">Pod Migration Job<a class="hash-link" href="#pod-migration-job" title="Direct link to heading">​</a></h2><p>Migrating Pods is an important capability that many components (such as descheduler) rely on, and can be used to optimize scheduling or help resolve workload runtime quality issues. We believe that pod migration is a complex process, involving steps such as auditing, resource allocation, and application startup, and is mixed with application upgrading, scaling scenarios, resource operation and maintenance operations by cluster administrators. Therefore, how to manage the stability risk of this process to ensure that the application does not fail due to the migration of Pods is a very critical issue that must be resolved.</p><p>The descheduler in the K8s community evicts pods according to different strategies. However, it does not guarantee whether the evicted Pod has resources available after re-creation. If a large number of newly created Pods are in the Pending state when the resources in the cluster are tight, may lower the application availabilities.</p><p>Koordinator defines a CRD-based Migration/Eviction API named <code>PodMigrationAPI</code>, through which the descheduler or other components can evict or delete Pods more safely. With PodMigrationJob we can track the status of each process in the migration, and perceive scenarios such as upgrading and scaling of the application.</p><p>It's simple to use the PodMigrationJob API. Create a <code>PodMigrationJob</code> with the YAML file below to migrate <code>pod-demo-0</code>. </p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> scheduling.koordinator.sh/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> PodMigrationJob</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> migrationjob</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">demo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">paused</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">ttl</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 5m</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">mode</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ReservationFirst</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">podRef</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> default</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pod</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">demo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">5f9b977566</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">c7lvk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">status</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">phase</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Pending</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl create -f migrationjob-demo.yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">podmigrationjob.scheduling.koordinator.sh/migrationjob-demo created</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Then you can query the migration status and query the migration events</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl get podmigrationjob migrationjob-demo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME                PHASE     STATUS     AGE   NODE     RESERVATION                            PODNAMESPACE   POD                         NEWPOD                      TTL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">migrationjob-demo   Succeed   Complete   37s   node-1   d56659ab-ba16-47a2-821d-22d6ba49258e   default        pod-demo-5f9b977566-c7lvk   pod-demo-5f9b977566-nxjdf   5m0s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl describe podmigrationjob migrationjob-demo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Events:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Type    Reason                Age    From               Message</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ----    ------                ----   ----               -------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Normal  ReservationCreated    8m33s  koord-descheduler  Successfully create Reservation </span><span class="token string" style="color:#e3116c">"d56659ab-ba16-47a2-821d-22d6ba49258e"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Normal  ReservationScheduled  8m33s  koord-descheduler  Assigned Reservation </span><span class="token string" style="color:#e3116c">"d56659ab-ba16-47a2-821d-22d6ba49258e"</span><span class="token plain"> to </span><span class="token function" style="color:#d73a49">node</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"node-1"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Normal  Evicting              8m33s  koord-descheduler  Try to evict Pod </span><span class="token string" style="color:#e3116c">"default/pod-demo-5f9b977566-c7lvk"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Normal  EvictComplete         8m     koord-descheduler  Pod </span><span class="token string" style="color:#e3116c">"default/pod-demo-5f9b977566-c7lvk"</span><span class="token plain"> has been evicted</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Normal  Complete              8m     koord-descheduler  Bind Pod </span><span class="token string" style="color:#e3116c">"default/pod-demo-5f9b977566-nxjdf"</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> Reservation </span><span class="token string" style="color:#e3116c">"d56659ab-ba16-47a2-821d-22d6ba49258e"</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ul><li>Please check out our <a href="/docs/user-manuals/pod-migration-job">user manual</a> for a detailed introduction and
tutorial.</li><li>For more information, please see <a href="/docs/designs/pod-migration-job">Design: PodMigrationJob</a>.</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="descheduling-framework">Descheduling Framework<a class="hash-link" href="#descheduling-framework" title="Direct link to heading">​</a></h2><p>We implemented a brand new Descheduling Framework in v0.6. </p><p>The existing descheduler in the community can solve some problems, but we think that there are still many aspects of the descheduler that can be improved, for example, it only supports the mode of periodic execution, and does not support the event-triggered mode. It is not possible to extend and configure custom descheduling strategies without invading the existing code of descheduler like kube-scheduler; it also does not support implementing custom evictor.</p><p>We also noticed that the K8s descheduler community also found these problems and proposed corresponding solutions such as <a href="https://github.com/kubernetes-sigs/descheduler/issues/753" target="_blank" rel="noopener noreferrer">#753 Descheduler framework Proposal</a> and <a href="https://github.com/kubernetes-sigs/descheduler/pull/781" target="_blank" rel="noopener noreferrer">PoC #781</a>. The K8s descheduler community tries to implement a descheduler framework similar to the k8s scheduling framework. This coincides with our thinking.</p><p>Overall, these solutions solved most of our problems, but we also noticed that the related implementations were not merged into the main branch. But we review these implementations and discussions, and we believe this is the right direction. Considering that Koordiantor has clear milestones for descheduler-related features, we will implement Koordinator's own descheduler independently of the upstream community. We try to use some of the designs in the <a href="https://github.com/kubernetes-sigs/descheduler/issues/753" target="_blank" rel="noopener noreferrer">#753 PR</a> proposed by the community and we will follow the Koordinator's compatibility principle with K8s to maintain compatibility with the upstream community descheduler when implementing. Such as independent implementation can also drive the evolution of the upstream community's work on the descheduler framework. And when the upstream community has new changes or switches to the architecture that Koordinator deems appropriate, Koordinator will follow up promptly and actively.</p><p>Based on this descheduling framework, it is very easy to be compatible with the existing descheduling strategies in the K8s community, and users can implement and integrate their own descheduling plugins as easily as K8s Scheduling Framework. At the same time, users are also supported to implement Controller in the form of plugins to realize event-based descheduling scenarios. At the same time, the framework integrates the <code>MigrationController</code> based on PodMigrationJob API and serves as the default Evictor plugin to help safely migrate Pods in various descheduling scenarios.</p><p>At present, we have implemented the main body of the framework, including the MigrationController based on PodMigrationJob, which is available as a whole. And we also provide <a href="https://github.com/koordinator-sh/koordinator/blob/main/pkg/descheduler/framework/plugins/removepodsviolatingnodeaffinity/node_affinity.go" target="_blank" rel="noopener noreferrer">a demo descheduling plugin</a>. In the future, we will migrate and be compatible with the existing descheduling policies of the community, as well as the load balancing descheduling plugin provided for co-location scenarios. </p><p>The current framework is still in the early stage of rapid evolution, and there are still many details that need to be improved. Everyone who is interested is welcome to participate in the construction together. We hope that more people can be more assured and simpler to realize the descheduling capabilities they need.</p><ul><li>For more information, please see <a href="/docs/designs/descheduler-framework">Design: descheduling framework</a>.</li><li>For specific implementation, please see <a href="https://github.com/koordinator-sh/koordinator/tree/main/pkg/descheduler" target="_blank" rel="noopener noreferrer">pkg/descheduler</a>.</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="about-gpu-scheduling">About GPU Scheduling<a class="hash-link" href="#about-gpu-scheduling" title="Direct link to heading">​</a></h2><p>There are also some new developments in GPU scheduling capabilities that everyone cares about. </p><p>During the iteration of v0.6, we completed the design of <a href="https://github.com/koordinator-sh/koordinator/blob/main/docs/proposals/scheduling/20220629-fine-grained-device-scheduling.md" target="_blank" rel="noopener noreferrer">GPU Share Scheduling</a>, and also completed the design of <a href="https://github.com/koordinator-sh/koordinator/blob/main/docs/proposals/scheduling/20220701-schedule-gang.md" target="_blank" rel="noopener noreferrer">Gang Scheduling</a>. Development of these capabilities is ongoing and will be released in v0.7. </p><p>In addition, in order to explore the mechanism of GPU overcommitment, we have implemented the ability to <a href="https://github.com/koordinator-sh/koordinator/pull/361" target="_blank" rel="noopener noreferrer">report GPU Metric</a> in v0.6.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="whats-coming-next-in-koordinator">What’s coming next in Koordinator<a class="hash-link" href="#whats-coming-next-in-koordinator" title="Direct link to heading">​</a></h2><p>Don't forget that Koordinator is developed in the open. You can check out our Github milestone to know more about what
is happening and what we have planned. For more details, please refer to
our <a href="https://github.com/koordinator-sh/koordinator/milestones" target="_blank" rel="noopener noreferrer">milestone</a>. Hope it helps!</p>]]></content>
        <author>
            <name>Joseph</name>
            <uri>https://github.com/eahydra</uri>
        </author>
        <category label="release" term="release"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Koordinator v0.5: Now With Node Resource Topology And More]]></title>
        <id>release-v0.5.0</id>
        <link href="https://koordinator.sh/blog/release-v0.5.0"/>
        <updated>2022-06-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In addition to the usual updates to supporting utilities, Koordinator v0.5 adds a couple of new useful features we think]]></summary>
        <content type="html"><![CDATA[<p>In addition to the usual updates to supporting utilities, Koordinator v0.5 adds a couple of new useful features we think
you'll like.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="install-or-upgrade-to-koordinator-v050">Install or Upgrade to Koordinator v0.5.0<a class="hash-link" href="#install-or-upgrade-to-koordinator-v050" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_mojV" id="install-with-helms">Install with helms<a class="hash-link" href="#install-with-helms" title="Direct link to heading">​</a></h3><p>Koordinator can be simply installed by helm v3.5+, which is a simple command-line tool, and you can get it
from <a href="https://github.com/helm/helm/releases" target="_blank" rel="noopener noreferrer">here</a>.</p><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Firstly add koordinator charts repository if you haven't do this.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> koordinator-sh https://koordinator-sh.github.io/charts/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># [Optional]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Install the latest version.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> koordinator koordinator-sh/koordinator --version </span><span class="token number" style="color:#36acaa">0.5</span><span class="token plain">.0</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="upgrade-with-helm">Upgrade with helm<a class="hash-link" href="#upgrade-with-helm" title="Direct link to heading">​</a></h3><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Firstly add koordinator charts repository if you haven't do this.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> koordinator-sh https://koordinator-sh.github.io/charts/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># [Optional]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Upgrade the latest version.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm upgrade koordinator koordinator-sh/koordinator --version </span><span class="token number" style="color:#36acaa">0.5</span><span class="token plain">.0 </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">--force</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>For more details, please refer to the <a href="/docs/installation">installation manual</a>.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="fine-grained-cpu-orchestration">Fine-grained CPU Orchestration<a class="hash-link" href="#fine-grained-cpu-orchestration" title="Direct link to heading">​</a></h2><p>In this version, we introduced a fine-grained CPU orchestration. Pods in the Kubernetes cluster may interfere with
others' running when they share the same physical resources and both demand many resources. The sharing of CPU resources
is almost inevitable. e.g. SMT threads (i.e. logical processors) share execution units of the same core, and cores in
the same chip share one last-level cache. The resource contention can slow down the running of these CPU-sensitive
workloads, resulting in high response latency (RT).</p><p>To improve the performance of CPU-sensitive workloads, koord-scheduler provides a mechanism of fine-grained CPU
orchestration. It enhances the CPU management of Kubernetes and supports detailed NUMA-locality and CPU exclusions.</p><p>Please check out our <a href="/docs/user-manuals/fine-grained-cpu-orchestration">user manual</a> for a detailed introduction and
tutorial.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="resource-reservation">Resource Reservation<a class="hash-link" href="#resource-reservation" title="Direct link to heading">​</a></h2><p>Pods are fundamental units for allocating node resources in Kubernetes, which bind resource requirements with business
logic. The scheduler is not able to reserve node resources for specific pods or workloads. We may try using a fake pod
to prepare resources by the preemption mechanism. However, fake pods can be preempted by any scheduled pods with higher
priorities, which make resources get scrambled unexpectedly.</p><p>In Koordinator, a resource reservation mechanism is proposed to enhance scheduling and especially benefits scenarios
below:</p><ol><li>Preemption: Existing preemption does not guarantee that only preempting pods can allocate preempted resources. With a
reservation, the scheduler should be able to "lock" resources preventing from allocation of other pods with the same
or
higher priority.</li><li>De-scheduling: For the descheduler, it is better to ensure sufficient resources with the reservation before pods get
rescheduled. Otherwise, rescheduled pods may not be runnable anymore and make the belonging application disrupted.</li><li>Horizontal scaling: Using reservation to achieve more deterministic horizontal scaling. e.g. Submit a reservation and
make sure it is available before scaling up replicas.</li><li>Resource Pre-allocation: Sometimes we want to pre-allocate node resources for future resource demands even if the
resources are not currently allocatable. Reservation can help with this and it should make no physical cost.</li></ol><p>This feature is still under development. We've finalized the API, feel free to check it out.</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">type Reservation struct {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    metav1.TypeMeta `json:",inline"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // A Reservation object is non-namespaced.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // It can reserve resources for pods of any namespace. Any affinity/anti-affinity of reservation scheduling can be</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // specified in the pod template.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    metav1.ObjectMeta `json:"metadata,omitempty"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Spec              ReservationSpec   `json:"spec,omitempty"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Status            ReservationStatus `json:"status,omitempty"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type ReservationSpec struct {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Template defines the scheduling requirements (resources, affinities, images, ...) processed by the scheduler just</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // like a normal pod.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // If the `template.spec.nodeName` is specified, the scheduler will not choose another node but reserve resources on</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // the specified node.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Template *corev1.PodTemplateSpec `json:"template,omitempty"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Specify the owners who can allocate the reserved resources.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Multiple owner selectors and ANDed.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Owners []ReservationOwner `json:"owners,omitempty"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // By default, the resources requirements of reservation (specified in `template.spec`) is filtered by whether the</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // node has sufficient free resources (i.e. ReservationRequest &lt;  NodeFree).</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // When `preAllocation` is set, the scheduler will skip this validation and allow overcommitment. The scheduled</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // reservation would be waiting to be available until free resources are sufficient.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    PreAllocation bool `json:"preAllocation,omitempty"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Time-to-Live period for the reservation.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // `expires` and `ttl` are mutually exclusive. If both `ttl` and `expires` are not specified, a very</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // long TTL will be picked as default.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    TTL *metav1.Duration `json:"ttl,omitempty"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Expired timestamp when the reservation expires.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // `expires` and `ttl` are mutually exclusive. Defaults to being set dynamically at runtime based on the `ttl`.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Expires *metav1.Time `json:"expires,omitempty"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type ReservationStatus struct {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // The `phase` indicates whether is reservation is waiting for process (`Pending`), available to allocate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // (`Available`) or expired to get cleanup (Expired).</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Phase ReservationPhase `json:"phase,omitempty"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // The `conditions` indicate the messages of reason why the reservation is still pending.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Conditions []ReservationCondition `json:"conditions,omitempty"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Current resource owners which allocated the reservation resources.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CurrentOwners []corev1.ObjectReference `json:"currentOwners,omitempty"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type ReservationOwner struct {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Multiple field selectors are ORed.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Object        *corev1.ObjectReference         `json:"object,omitempty"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Controller    *ReservationControllerReference `json:"controller,omitempty"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    LabelSelector *metav1.LabelSelector           `json:"labelSelector,omitempty"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type ReservationControllerReference struct {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Extend with a `namespace` field for reference different namespaces.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    metav1.OwnerReference `json:",inline"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Namespace             string `json:"namespace,omitempty"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type ReservationPhase string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // ReservationPending indicates the Reservation has not been processed by the scheduler or is unschedulable for</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // some reasons (e.g. the resource requirements cannot get satisfied).</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ReservationPending ReservationPhase = "Pending"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // ReservationAvailable indicates the Reservation is both scheduled and available for allocation.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ReservationAvailable ReservationPhase = "Available"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // ReservationWaiting indicates the Reservation is scheduled, but the resources to reserve are not ready for</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // allocation (e.g. in pre-allocation for running pods).</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ReservationWaiting ReservationPhase = "Waiting"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // ReservationExpired indicates the Reservation is expired, which the object is not available to allocate and will</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // get cleaned in the future.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ReservationExpired ReservationPhase = "Expired"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type ReservationCondition struct {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    LastProbeTime      metav1.Time `json:"lastProbeTime"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    LastTransitionTime metav1.Time `json:"lastTransitionTime"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Reason             string      `json:"reason"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Message            string      `json:"message"`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="qos-manager">QoS Manager<a class="hash-link" href="#qos-manager" title="Direct link to heading">​</a></h2><p>Currently, plugins from resmanager in Koordlet are mixed together, they should be classified into two
categories: <code>static</code> and <code>dynamic</code>. Static plugins will be called and run only once when a container created, updated,
started or stopped. However, for dynamic plugins, they may be called and run at any time according the real-time runtime
states of node, such as CPU suppress, CPU burst, etc. This proposal only focuses on refactoring dynamic plugins. Take a
look at current plugin implementation, there are many function calls to resmanager's methods directly, such as
collecting node/pod/container metrics, fetching metadata of node/pod/container, fetching configurations(NodeSLO, etc.).
In the feature, we may need a flexible and powerful framework with scalability for special external plugins.</p><p>The below is directory tree of qos-manager inside koordlet, all existing dynamic plugins(as built-in plugins) will be
moved into sub-directory <code>plugins</code>.</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">pkg/koordlet/qosmanager/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                       - manager.go</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                       - context.go   // plugin context</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                       - /plugins/    // built-in plugins</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                 - /cpubrust/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                 - /cpusuppress/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                 - /cpuevict/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                 - /memoryevict/</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>We only have the proposal in this version. Stay tuned, further implementation is coming soon!</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="multiple-running-hook-modes">Multiple Running Hook Modes<a class="hash-link" href="#multiple-running-hook-modes" title="Direct link to heading">​</a></h2><p><code>Runtime Hooks</code> includes a set of plugins which are responsible for the injections of resource isolation parameters
by pod attribute. When <code>Koord Runtime Proxy</code> running as a CRI Proxy, <code>Runtime Hooks</code> acts as the backend server. The
mechanism of CRI Proxy can ensure the consistency of resource parameters during pod lifecycle. However,
<code>Koord Runtime Proxy</code> can only hijack CRI requests from kubelet for pods, the consistency of resource parameters in
QoS class directory cannot be guaranteed. Besides, modification of pod parameters from third-party(e.g. manually) will
also break the correctness of hook plugins.</p><p>Therefore, a standalone running mode with reconciler for <code>Runtime Hooks</code> is necessary. Under <code>Standalone</code> running
mode, resource isolation parameters will be injected asynchronously, keeping eventual consistency of the injected
parameters for pod and QoS class even without <code>Runtime Hook Manager</code>.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="some-minor-works">Some minor works<a class="hash-link" href="#some-minor-works" title="Direct link to heading">​</a></h2><ol><li>We fix the backward compatibility issues reported by our users
in <a href="https://github.com/koordinator-sh/koordinator/issues/310" target="_blank" rel="noopener noreferrer">here</a>. If you've ever encountered similar problem,
please upgrade to the latest version.</li><li>Two more interfaces were added into runtime-proxy. One is <code>PreCreateContainerHook</code>, which could set container
resources setting before creating, and the other is <code>PostStopSandboxHook</code>, which could do the resource setting
garbage collecting before pods deleted.</li><li><code>cpuacct.usage</code> is more precise than <code>cpuacct.stat</code>, and <code>cpuacct.stat</code> is in USER_HZ unit, while <code>cpuacct.usage</code> is
nanoseconds. After thorough discussion, we were on the same page that we replace <code>cpuacct.stat</code> with <code>cpuacct.usage</code>
in koordlet.</li><li>Koordlet needs to keep fetching data from kubelet. Before this version, we only support accessing kubelet via
read-only port over HTTP. Due to security concern, we've enabled HTTPS access in this version. For more details,
please refer to this <a href="https://github.com/koordinator-sh/koordinator/pull/320" target="_blank" rel="noopener noreferrer">PR</a>.</li></ol><h2 class="anchor anchorWithStickyNavbar_mojV" id="whats-coming-next-in-koordinator">What’s coming next in Koordinator<a class="hash-link" href="#whats-coming-next-in-koordinator" title="Direct link to heading">​</a></h2><p>Don't forget that Koordinator is developed in the open. You can check out our Github milestone to know more about what
is happening and what we have planned. For more details, please refer to
our <a href="https://github.com/koordinator-sh/koordinator/milestones" target="_blank" rel="noopener noreferrer">milestone</a>. Hope it helps!</p>]]></content>
        <author>
            <name>Jason</name>
            <uri>https://github.com/jasonliu747</uri>
        </author>
        <category label="release" term="release"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[What's New in Koordinator v0.4.0?]]></title>
        <id>release-v0.4.0</id>
        <link href="https://koordinator.sh/blog/release-v0.4.0"/>
        <updated>2022-05-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We are happy to announce the release of Koordinator v0.4.0. Koordinator v0.4.0 brings in some notable changes that are most wanted by the community while continuing to expand on experimental features. And in this version, we started to gradually enhance the capabilities of the scheduler.]]></summary>
        <content type="html"><![CDATA[<p>We are happy to announce the release of Koordinator v0.4.0. Koordinator v0.4.0 brings in some notable changes that are most wanted by the community while continuing to expand on experimental features. And in this version, we started to gradually enhance the capabilities of the scheduler.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="install-or-upgrade-to-koordinator-v040">Install or Upgrade to Koordinator v0.4.0<a class="hash-link" href="#install-or-upgrade-to-koordinator-v040" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_mojV" id="install-with-helms">Install with helms<a class="hash-link" href="#install-with-helms" title="Direct link to heading">​</a></h3><p>Koordinator can be simply installed by helm v3.5+, which is a simple command-line tool, and you can get it
from <a href="https://github.com/helm/helm/releases" target="_blank" rel="noopener noreferrer">here</a>.</p><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Firstly add koordinator charts repository if you haven't do this.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> koordinator-sh https://koordinator-sh.github.io/charts/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># [Optional]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Install the latest version.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> koordinator koordinator-sh/koordinator --version </span><span class="token number" style="color:#36acaa">0.4</span><span class="token plain">.0</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="upgrade-with-helm">Upgrade with helm<a class="hash-link" href="#upgrade-with-helm" title="Direct link to heading">​</a></h3><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Firstly add koordinator charts repository if you haven't do this.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> koordinator-sh https://koordinator-sh.github.io/charts/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># [Optional]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Upgrade the latest version.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm upgrade koordinator koordinator-sh/koordinator --version </span><span class="token number" style="color:#36acaa">0.4</span><span class="token plain">.0 </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">--force</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>For more details, please refer to the <a href="/docs/installation">installation manual</a>.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="enhanced-node-side-scheduling-capabilities">Enhanced node-side scheduling capabilities<a class="hash-link" href="#enhanced-node-side-scheduling-capabilities" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_mojV" id="custom-memory-evict-threshold">Custom memory evict threshold<a class="hash-link" href="#custom-memory-evict-threshold" title="Direct link to heading">​</a></h3><p>In the Koordinator v0.2.0, an ability to improve the stability of the node side in the co-location scenario was introduced: <a href="/blog/release-v0.2.0#active-eviction-mechanism-based-on-memory-safety-thresholds">Active eviction mechanism based on memory safety thresholds</a>. The current memory utilization safety threshold default value is 70%, now in the v0.4.0 version, you can modify the <code>memoryEvictThresholdPercent</code> with 60% in ConfigMap <code>slo-controller-config</code> according to the actual situation:</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ConfigMap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> slo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">controller</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> koordinator</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">system</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">colocation-config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">      "enable": true</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">resource-threshold-config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">      "clusterStrategy": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        "enable": true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        "memoryEvictThresholdPercent": 60</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    }</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="be-pods-eviction-based-on-satisfaction">BE Pods eviction based on satisfaction<a class="hash-link" href="#be-pods-eviction-based-on-satisfaction" title="Direct link to heading">​</a></h3><p>In order to ensure the runtime quality of different workloads in co-location scenarios, Koordinator uses the CPU Suppress mechanism provided by koordlet on the node side to suppress workloads of the best effort type when the load increases. Or increase the resource quota for best effort type workloads when the load decreases. </p><p>However, it is not suitable if there are many best effort Pods on the node and they are frequently suppressed. Therefore, in version v0.4.0, Koordinator provides an eviction mechanism based on satisfaction of the requests for the best effort Pods. If the best effort Pods are frequently suppressed, the requests of the best effort Pods cannot be satisfied, and the satisfaction is generally less than 1; if the best effort Pods are not suppressed and more CPU resources are obtained when the node resources are idle, then the requests of the best effort Pods can be satisfied, and the satisfaction is greater than or equal to 1. If the satisfaction is less than the specified threshold, and the CPU utilization of the best effort Pods is close to 100%, <code>koordlet</code> will evict some best effort Pods to improve the runtime quality of the node. The priority with lower priority or with higher CPU utilization of the same priority is evicted.</p><p>You can modify the ConfigMap <code>slo-controller-config</code> according to the actual situation:</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ConfigMap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> slo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">controller</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> koordinator</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">system</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">colocation-config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">      "enable": true</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">resource-threshold-config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">      "clusterStrategy": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        "enable": true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        "cpuEvictBESatisfactionUpperPercent": 80,</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        "cpuEvictBESatisfactionLowerPercent": 60</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    }</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="group-identity">Group identity<a class="hash-link" href="#group-identity" title="Direct link to heading">​</a></h3><p>When latency-sensitive applications and best effort workloads are deployed on the same node, the Linux kernel scheduler must provide more scheduling opportunities to high-priority applications to minimize scheduling latency and the impacts of low-priority workloads on kernel scheduling. For this scenario, Koordinator integrated with the group identity allowing users to configure scheduling priorities to CPU cgroups. </p><p>Alibaba Cloud Linux 2 with a kernel of the kernel-4.19.91-24.al7 version or later supports the group identity feature. The group identity feature relies on a dual red-black tree architecture. A low-priority red-black tree is added based on the red-black tree of the Completely Fair Scheduler (CFS) scheduling queue to store low-priority workloads. When the kernel schedules the workloads that have identities, the kernel processes the workloads based on their priorities. For more details, please refer to the <a href="https://www.alibabacloud.com/help/en/elastic-compute-service/latest/group-identity-feature" target="_blank" rel="noopener noreferrer">doc</a>.</p><p>Koordinator defines group identity default values for Pods of different QoS types:</p><table><thead><tr><th>QoS</th><th>Default Value</th></tr></thead><tbody><tr><td>LSR</td><td>2</td></tr><tr><td>LS</td><td>2</td></tr><tr><td>BE</td><td>-1</td></tr></tbody></table><p>You can modify the ConfigMap <code>slo-controller-config</code> to set group identity values according to the actual situation:</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ConfigMap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> slo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">controller</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> koordinator</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">system</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">colocation-config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">      "enable": true</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">resource-qos-config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">      "clusterStrategy": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        "lsrClass": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">            "cpuQOS": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">                "enable": true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">                "groupIdentity": 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        "lsClass": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">            "cpuQOS": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">                "enable": true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">                "groupIdentity": 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        "beClass": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">            "cpuQOS": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">                "enable": true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">                "groupIdentity": -1</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        "systemClass": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">            "cpuQOS": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">                "enable": true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">                "groupIdentity": 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    }</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>To enable this feature, you need to update the kernel and configuration file, then install the new component <code>koord-runtime-proxy</code> of koordinator.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="koord-runtime-proxy-experimental">koord-runtime-proxy (experimental)<a class="hash-link" href="#koord-runtime-proxy-experimental" title="Direct link to heading">​</a></h2><p><code>koord-runtime-proxy</code> acts as a proxy between kubelet and containerd(dockerd under dockershim scenario), which is designed to intercept CRI request, and apply some resource management policies, such as setting different cgroup parameters by pod priorities under hybrid workload orchestration scenario, applying new isolation policies for latest Linux kernel, CPU architecture, and etc.</p><p>There are two components involved, koord-runtime-proxy and RuntimePlugins.</p><p><img loading="lazy" alt="image" src="/assets/images/koord-runtime-proxy-architecture-89594d54b7712128b218cd4d611b457f.svg" width="431" height="303"></p><h3 class="anchor anchorWithStickyNavbar_mojV" id="koord-runtime-proxy">koord-runtime-proxy<a class="hash-link" href="#koord-runtime-proxy" title="Direct link to heading">​</a></h3><p>koord-runtime-proxy is in charge of intercepting request during pod's lifecycle, such as RunPodSandbox, CreateContainer etc., and then calling RuntimePlugins to do resource isolation policies before transferring request to backend containerd(dockerd) and after transferring response to kubelet. koord-runtime-proxy provides an isolation-policy-execution framework which allows customized plugins registered to do specified isolation policies, these plugins are called RuntimePlugins. koord-runtime-proxy itself does NOT do any isolation policies.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="runtimeplugins">RuntimePlugins<a class="hash-link" href="#runtimeplugins" title="Direct link to heading">​</a></h3><p>RuntimePlugins register events(RunPodSandbox etc.) to koord-runtime-proxy and would receive notifications when events happen. RuntimePlugins should complete resource isolation policies basing on the notification message, and then response koord-runtime-proxy, koord-runtime-proxy would decide to transfer request to backend containerd or discard request according to plugins' response.</p><p>If no RuntimePlugins registered, koord-runtime-proxy would become a transparent proxy between kubelet and containerd.</p><p>For more details, please refer to the <a href="https://github.com/koordinator-sh/koordinator/blob/main/docs/design-archive/runtime-manager-design-doc.md" target="_blank" rel="noopener noreferrer">design doc</a>.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="installation">Installation<a class="hash-link" href="#installation" title="Direct link to heading">​</a></h3><p>When installing koord-runtime-proxy, you need to change the startup parameters of the kubelet, set the CRI parameters to point to the koord-runtime-proxy, and configure the CRI parameters of the corresponding container runtime when installing the koord-runtime-proxy. </p><p>koord-runtime-proxy is in the Alpha experimental version stage. Currently, it provides a minimum set of extension points. At the same time, there may be some bugs. You are welcome to try it and give feedback.</p><p>For detailed installation process, please refer to the <a href="/docs/installation#install-koord-runtime-proxy-experimental">manual</a>.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="load-aware-scheduling">Load-Aware Scheduling<a class="hash-link" href="#load-aware-scheduling" title="Direct link to heading">​</a></h2><p>Although Koordinator provides the co-location mechanism to improve the resource utilization of the cluster and reduce costs, it does not yet have the ability to control the utilization level of the cluster dimension, Best Effort workloads may also interfere with latency-sensitive applications. Load-aware scheduling plugin helps Koordinator to achieve this capability.</p><p>The scheduling plugin filters abnormal nodes and scores them according to resource usage. This scheduling plugin extends the Filter/Score/Reserve/Unreserve extension points defined in the Kubernetes scheduling framework.</p><p>By default, abnormal nodes are filtered, and users can decide whether to enable or not by configuring as needed.</p><ul><li>Filter nodes where koordlet fails to update NodeMetric. </li><li>Filter nodes by utilization thresholds. If the configuration enables, the plugin will exclude nodes with <em>latestUsageUtilization &gt;= utilizationThreshold</em>.</li></ul><p>This plugin is dependent on NodeMetric's reporting period. Different reporting periods need to be set according to different scenarios and workloads. Therefore, NodeMetricSpec has been extended to support user-defined reporting period and aggregation period. Users can modify <code>slo-controller-config</code> to complete the corresponding configuration, and the controller in <code>koord-manager</code> will be responsible for updating the reporting period and aggregation period fields of NodeMetrics of related nodes.</p><p>Currently, the resource utilization thresholds of nodes are configured based on experience to ensure the runtime quality of nodes. But there are also ways to evaluate the workload running on the node to arrive at a more appropriate threshold for resource utilization. For example, in a time-sharing scenario, a higher threshold can be set to allow scheduling to run more best effort workloads during the valley of latency-sensitive applications. When the peak of latency-sensitive applications comes up, lower the threshold and evict some best effort workloads. In addition, 3-sigma can be used to analyze the utilization level in the cluster to obtain a more appropriate threshold.</p><p>The core logic of the scoring algorithm is to select the node with the smallest resource usage. However, considering the delay of resource usage reporting and the delay of Pod startup time, the resource requests of the Pods that have been scheduled and the Pods currently being scheduled within the time window will also be estimated, and the estimated values will be involved in the calculation.</p><p>At present, Koordinator does not have the ability to profile workloads. Different types of workloads have different ways of building profiles. For example, long-running pods need to be scheduled with long-period profiling, while short-period pods should be scheduled with short-period profiling.</p><p>For more details, please refer to the <a href="https://github.com/koordinator-sh/koordinator/blob/main/docs/proposals/scheduling/20220510-load-aware-scheduling.md" target="_blank" rel="noopener noreferrer">proposal</a>.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="what-comes-next">What Comes Next<a class="hash-link" href="#what-comes-next" title="Direct link to heading">​</a></h2><p>For more details, please refer to our <a href="https://github.com/koordinator-sh/koordinator/milestones" target="_blank" rel="noopener noreferrer">milestone</a>. Hope it
helps!</p>]]></content>
        <author>
            <name>Joseph</name>
            <uri>https://github.com/eahydra</uri>
        </author>
        <category label="release" term="release"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[What's New in Koordinator v0.3.0?]]></title>
        <id>release-v0.3.0</id>
        <link href="https://koordinator.sh/blog/release-v0.3.0"/>
        <updated>2022-05-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We are happy to announce the v0.3.0 release of Koordinator. After starting small and learning what users needed, we]]></summary>
        <content type="html"><![CDATA[<p>We are happy to announce the v0.3.0 release of <strong>Koordinator</strong>. After starting small and learning what users needed, we
are able to adjust its path and develop features needed for a stable community release.</p><p>The release of Koordinator v0.3.0 brings in some notable changes that are most wanted by the community while continuing
to expand on experimental features.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="install-or-upgrade-to-koordinator-v030">Install or Upgrade to Koordinator v0.3.0<a class="hash-link" href="#install-or-upgrade-to-koordinator-v030" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_mojV" id="install-with-helms">Install with helms<a class="hash-link" href="#install-with-helms" title="Direct link to heading">​</a></h3><p>Koordinator can be simply installed by helm v3.5+, which is a simple command-line tool, and you can get it
from <a href="https://github.com/helm/helm/releases" target="_blank" rel="noopener noreferrer">here</a>.</p><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Firstly add koordinator charts repository if you haven't do this.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> koordinator-sh https://koordinator-sh.github.io/charts/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># [Optional]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Install the latest version.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> koordinator koordinator-sh/koordinator --version </span><span class="token number" style="color:#36acaa">0.3</span><span class="token plain">.0</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="upgrade-with-helm">Upgrade with helm<a class="hash-link" href="#upgrade-with-helm" title="Direct link to heading">​</a></h3><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Firstly add koordinator charts repository if you haven't do this.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> koordinator-sh https://koordinator-sh.github.io/charts/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># [Optional]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Upgrade the latest version.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm upgrade koordinator koordinator-sh/koordinator --version </span><span class="token number" style="color:#36acaa">0.3</span><span class="token plain">.0 </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">--force</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>For more details, please refer to the <a href="/docs/installation">installation manual</a>.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="cpu-burst">CPU Burst<a class="hash-link" href="#cpu-burst" title="Direct link to heading">​</a></h2><p>CPU Burst is a service level objective (SLO)-aware resource scheduling feature provided by Koordinator. You can use CPU
Burst to improve the performance of latency-sensitive applications. CPU scheduling for
a container may be throttled by the kernel due to the CPU limit, which downgrades the performance of the application.
Koordlet automatically detects CPU throttling events and automatically adjusts the CPU limit to a
proper value. This greatly improves the performance of latency-sensitive applications.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="how-cpu-burst-works">How CPU Burst works<a class="hash-link" href="#how-cpu-burst-works" title="Direct link to heading">​</a></h3><p>Kubernetes allows you to specify CPU limits, which can be reused based on time-sharing. If you specify a CPU limit for a
container, the OS limits the amount of CPU resources that can be used by the container within a specific time period.
For example, you set the CPU limit of a container to 2. The OS kernel limits the CPU time slices that the container can
use to 200 milliseconds within each 100-millisecond period.</p><p>CPU utilization is a key metric that is used to evaluate the performance of a container. In most cases, the CPU limit is
specified based on CPU utilization. CPU utilization on a per-millisecond basis shows more spikes than on a per-second
basis. If the CPU utilization of a container reaches the limit within a 100-millisecond period, CPU throttling is
enforced by the OS kernel and threads in the container are suspended for the rest of the time period.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="how-to-use-cpu-burst">How to use CPU Burst<a class="hash-link" href="#how-to-use-cpu-burst" title="Direct link to heading">​</a></h3><ul><li><p>Use an annotation to enable CPU Burst</p><p>Add the following annotation to the pod configuration to enable CPU Burst:</p></li></ul><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">annotations</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Set the value to auto to enable CPU Burst for the pod. </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">koordinator.sh/cpuBurst</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'{"policy": "auto"}'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># To disable CPU Burst for the pod, set the value to none. </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#koordinator.sh/cpuBurst: '{"policy": "none"}'</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ul><li><p>Use a ConfigMap to enable CPU Burst for all pods in a cluster</p><p>Modify the slo-controller-config ConfigMap based on the
following content to enable CPU Burst for all pods in a cluster:</p></li></ul><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ConfigMap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> slo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">controller</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> koordinator</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">system</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">cpu-burst-config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'{"clusterStrategy": {"policy": "auto"}}'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#cpu-burst-config: '{"clusterStrategy": {"policy": "cpuBurstOnly"}}'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#cpu-burst-config: '{"clusterStrategy": {"policy": "none"}}'</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ul><li><p>Advanced configurations</p><p>The following code block shows the pod annotations and ConfigMap fields that you can use for advanced configurations:</p></li></ul><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Example of the slo-controller-config ConfigMap. </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">cpu-burst-config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">      "clusterStrategy": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        "policy": "auto",</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        "cpuBurstPercent": 1000,</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        "cfsQuotaBurstPercent": 300,</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        "sharePoolThresholdPercent": 50,</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        "cfsQuotaBurstPeriodSeconds": -1</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Example of pod annotations. </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">koordinator.sh/cpuBurst</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'{"policy": "auto", "cpuBurstPercent": 1000, "cfsQuotaBurstPercent": 300, "cfsQuotaBurstPeriodSeconds": -1}'</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>The following table describes the ConfigMap fields that you can use for advanced configurations of CPU Burst.</p><table><thead><tr><th>Field</th><th>Data type</th><th>Description</th></tr></thead><tbody><tr><td>policy</td><td>string</td><td><ul> <li> none: disables CPU Burst. If you set the value to none, the related fields are reset to their original values. This is the default value.</li> <li>cpuBurstOnly: enables the CPU Burst feature only for the kernel of Alibaba Cloud Linux 2. </li><li> cfsQuotaBurstOnly: enables automatic adjustment of CFS quotas of general kernel versions. </li> <li> auto: enables CPU Burst and all the related features. </li> </ul></td></tr><tr><td>cpuBurstPercent</td><td>int</td><td>Default value:<code>1000</code>. Unit: %. This field specifies the percentage to which the CPU limit can be increased by CPU Burst. If the CPU limit is set to <code>1</code>, CPU Burst can increase the limit to 10 by default.</td></tr><tr><td>cfsQuotaBurstPercent</td><td>int</td><td>Default value: <code>300</code>. Unit: %. This field specifies the maximum percentage to which the value of cfs_quota in the cgroup parameters can be increased. By default, the value of cfs_quota can be increased to at most three times.</td></tr><tr><td>cfsQuotaBurstPeriodSeconds</td><td>int</td><td>Default value: <code>-1</code>. Unit: seconds. This indicates that the time period in which the container can run with an increased CFS quota is unlimited. This field specifies the time period in which the container can run with an increased CFS quota, which cannot exceed the upper limit specified by <code>cfsQuotaBurstPercent</code>.</td></tr><tr><td>sharePoolThresholdPercent</td><td>int</td><td>Default value: <code>50</code>. Unit: %. This field specifies the CPU utilization threshold of the node. If the CPU utilization of the node exceeds the threshold, the value of cfs_quota in cgroup parameters is reset to the original value.</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_mojV" id="l3-cache-and-mba-resource-isolation">L3 cache and MBA resource isolation<a class="hash-link" href="#l3-cache-and-mba-resource-isolation" title="Direct link to heading">​</a></h2><p>Pods of different priorities are usually deployed on the same machine. This may cause pods to compete for computing
resources. As a result, the quality of service (QoS) of your service cannot be ensured. The Resource Director
Technology (RDT) controls the Last Level Cache (L3 cache) that can be used by workloads of different priorities. RDT
also uses the Memory Bandwidth Allocation (MBA) feature to control the memory bandwidth that can be used by workloads.
This isolates the L3 cache and memory bandwidth used by workloads, ensures the QoS of high-priority workloads, and
improves overall resource utilization. This topic describes how to improve the resource isolation of pods with
different priorities by controlling the L3 cache and using the MBA feature.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="how-to-use-l3-cache-and-mba-resource-isolation">How to use L3 cache and MBA resource isolation<a class="hash-link" href="#how-to-use-l3-cache-and-mba-resource-isolation" title="Direct link to heading">​</a></h3><ul><li>Use a ConfigMap to enable L3 cache and MBA resource isolation for all pods in a cluster</li></ul><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ConfigMap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> slo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">controller</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> koordinator</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">system</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">resource-qos-config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">"clusterStrategy"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">"lsClass"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           </span><span class="token key atrule" style="color:#00a4db">"resctrlQOS"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token key atrule" style="color:#00a4db">"enable"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token key atrule" style="color:#00a4db">"catRangeStartPercent"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token key atrule" style="color:#00a4db">"catRangeEndPercent"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token key atrule" style="color:#00a4db">"MBAPercent"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">"beClass"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           </span><span class="token key atrule" style="color:#00a4db">"resctrlQOS"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token key atrule" style="color:#00a4db">"enable"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token key atrule" style="color:#00a4db">"catRangeStartPercent"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token key atrule" style="color:#00a4db">"catRangeEndPercent"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">30</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token key atrule" style="color:#00a4db">"MBAPercent"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="memory-qos">Memory QoS<a class="hash-link" href="#memory-qos" title="Direct link to heading">​</a></h2><p>The Koordlet provides the memory quality of service (QoS) feature for containers. You can use this
feature to optimize the performance of memory-sensitive applications while ensuring fair memory scheduling among
containers. This topic describes how to enable the memory QoS feature for containers.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="background-information">Background information<a class="hash-link" href="#background-information" title="Direct link to heading">​</a></h3><p>The following memory limits apply to containers:</p><ul><li>The memory limit of the container. If the amount of memory that a container uses, including the page cache, is about
to reach the memory limit of the container, the memory reclaim mechanism of the OS kernel is triggered. As a result,
the application in the container may not be able to request or release memory resources as normal.</li><li>The memory limit of the node. If the memory limit of a container is greater than the memory request of the container,
the container can overcommit memory resources. In this case, the available memory on the node may become insufficient.
This causes the OS kernel to reclaim memory from containers. As a result, the performance of your application is
downgraded. In extreme cases, the node cannot run as normal.</li></ul><p>To improve the performance of applications and the stability of nodes, Koordinator provides the memory QoS feature for
containers. We recommend that you use Anolis OS as the node OS. For other OS, we will try our best to adapt, and users
can still enable it without side effects. After you enable the memory QoS feature for a container, Koordlet
automatically configures the memory control group (memcg) based on the configuration of the container. This helps you
optimize the performance of memory-sensitive applications while ensuring fair memory scheduling on the node.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="how-to-use-memory-qos">How to use Memory QoS<a class="hash-link" href="#how-to-use-memory-qos" title="Direct link to heading">​</a></h3><p>When you enable memory QoS for the containers in a pod, the memcg is automatically configured based on the specified
ratios and pod parameters. To enable memory QoS for the containers in a pod, perform the following steps:</p><ol><li>Add the following annotations to enable memory QoS for the containers in a pod:</li></ol><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">annotations</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># To enable memory QoS for the containers in a pod, set the value to auto. </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">koordinator.sh/memoryQOS</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'{"policy": "auto"}'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># To disable memory QoS for the containers in a pod, set the value to none. </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#koordinator.sh/memoryQOS: '{"policy": "none"}'</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="2"><li>Use a ConfigMap to enable memory QoS for all the containers in a cluster.</li></ol><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ConfigMap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> slo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">controller</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> koordinator</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">system</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">resource-qos-config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">"clusterStrategy"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">"lsClass"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           </span><span class="token key atrule" style="color:#00a4db">"memoryQOS"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token key atrule" style="color:#00a4db">"enable"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">"beClass"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           </span><span class="token key atrule" style="color:#00a4db">"memoryQOS"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token key atrule" style="color:#00a4db">"enable"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="3"><li><p>Optional. Configure advanced parameters.</p><p>The following table describes the advanced parameters that you can use to configure fine-grained memory QoS
configurations at the pod level and cluster level.</p></li></ol><table><thead><tr><th>Parameter</th><th>Data type</th><th>Valid value</th><th>Description</th></tr></thead><tbody><tr><td>enable</td><td>Boolean</td><td><ul> <li> true </li> <li> false </li> </ul></td><td><ul> <li> true: enables memory QoS for all the containers in a cluster. The default memory QoS settings for the QoS class of the containers are used. </li> <li> false: disables memory QoS for all the containers in a cluster. The memory QoS settings are restored to the original settings for the QoS class of the containers. </li> </ul></td></tr><tr><td>policy</td><td>String</td><td><ul> <li> auto </li> <li> default </li> <li> none </li> </ul></td><td><ul> <li> auto: enables memory QoS for the containers in the pod and uses the recommended memory QoS settings. The recommended memory QoS settings are prioritized over the cluster-wide memory QoS settings. </li> <li> default: specifies that the pod inherits the cluster-wide memory QoS settings. </li> <li> none: disables memory QoS for the pod. The relevant memory QoS settings are restored to the original settings. The original settings are prioritized over the cluster-wide memory QoS settings. </li> </ul></td></tr><tr><td>minLimitPercent</td><td>Int</td><td>0~100</td><td>Unit: %. Default value:<code>0</code>. The default value indicates that this parameter is disabled. This parameter specifies the unreclaimable proportion of the memory request of a pod. The amount of unreclaimable memory is calculated based on the following formula: <code>Value of memory.min = Memory request × Value of minLimitPercent/100</code>. This parameter is suitable for scenarios where applications are sensitive to the page cache. You can use this parameter to cache files to optimize read and write performance. For example, if you specify Memory <code>Request=100MiB</code> and <code>minLimitPercent=100</code> for a container, <code>the value of memory.min is 104857600</code>.</td></tr><tr><td>lowLimitPercent</td><td>Int</td><td>0~100</td><td>Unit: %. Default value:<code>0</code>. The default value indicates that this parameter is disabled. This parameter specifies the relatively unreclaimable proportion of the memory request of a pod. The amount of relatively unreclaimable memory is calculated based on the following formula: <code>Value of memory.low = Memory request × Value of lowLimitPercent/100</code>. For example, if you specify <code>Memory Request=100MiB</code> and <code>lowLimitPercent=100</code> for a container, <code>the value of memory.low is 104857600</code>.</td></tr><tr><td>throttlingPercent</td><td>Int</td><td>0~100</td><td>Unit: %. Default value:<code>0</code>. The default value indicates that this parameter is disabled. This parameter specifies the memory throttling threshold for the ratio of the memory usage of a container to the memory limit of the container. The memory throttling threshold for memory usage is calculated based on the following formula: <code>Value of memory.high = Memory limit × Value of throttlingPercent/100</code>. If the memory usage of a container exceeds the memory throttling threshold, the memory used by the container will be reclaimed. This parameter is suitable for container memory overcommitment scenarios. You can use this parameter to cgroups from triggering OOM. For example, if you specify <code>Memory Limit=100MiB</code> and <code>throttlingPercent=80</code> for a container, <code>the value of memory.high is 83886080</code>, which is equal to 80 MiB.</td></tr><tr><td>wmarkRatio</td><td>Int</td><td>0~100</td><td>Unit: %. Default value:<code>95</code>. A value of <code>0</code> indicates that this parameter is disabled. This parameter specifies the threshold of the usage of the memory limit or the value of <code>memory.high</code> that triggers asynchronous memory reclaim. If <code>throttlingPercent</code> is disabled, the asynchronous memory reclaim threshold for memory usage is calculated based on the following formula: <code>Value of memory.wmark_high = Memory limit × wmarkRatio/100</code>. If <code>throttlingPercent</code> is enabled, the asynchronous memory reclaim threshold for memory usage is calculated based on the following formula: <code>Value of memory.wmark_high = Value of memory.high × wmarkRatio/100</code>. If the usage of the memory limit or the value of memory.high exceeds the threshold, the memcg backend asynchronous reclaim feature is triggered. For example, if you specify <code>Memory Limit=100MiB</code>for a container, the memory throttling setting is<code>memory.high=83886080</code>, the reclaim ratio setting is <code>memory.wmark_ratio=95</code>, and the reclaim threshold setting is <code>memory.wmark_high=79691776</code>.</td></tr><tr><td>wmarkMinAdj</td><td>Int</td><td>-25~50</td><td>Unit: %. The default value is <code>-25</code> for the <code>LS</code>/ <code>LSR</code> QoS class and <code>50</code> for the <code>BE</code> QoS class. A value of 0 indicates that this parameter is disabled. This parameter specifies the adjustment to the global minimum watermark for a container. A negative value decreases the global minimum watermark and therefore postpones memory reclaim for the container. A positive value increases the global minimum watermark and therefore antedates memory reclaim for the container. For example, if you create a pod whose QoS class is LS, the default setting of this parameter is <code>memory.wmark_min_adj=-25</code>, which indicates that the minimum watermark is decreased by 25% for the containers in the pod.</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_mojV" id="what-comes-next">What Comes Next<a class="hash-link" href="#what-comes-next" title="Direct link to heading">​</a></h2><p>For more details, please refer to our <a href="https://github.com/koordinator-sh/koordinator/milestones" target="_blank" rel="noopener noreferrer">milestone</a>. Hope it
helps!</p>]]></content>
        <author>
            <name>Jason</name>
            <uri>https://github.com/jasonliu747</uri>
        </author>
        <category label="koordinator" term="koordinator"/>
        <category label="colocation" term="colocation"/>
        <category label="kubernetes" term="kubernetes"/>
        <category label="scheduling" term="scheduling"/>
        <category label="orchestration" term="orchestration"/>
        <category label="release" term="release"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Koordinator v0.2.0 - Enhanced node-side scheduling capabilities]]></title>
        <id>release-v0.2.0</id>
        <link href="https://koordinator.sh/blog/release-v0.2.0"/>
        <updated>2022-04-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We’re pleased to announce the release of Koordinator v0.2.0.]]></summary>
        <content type="html"><![CDATA[<p>We’re pleased to announce the release of Koordinator v0.2.0.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="overview">Overview<a class="hash-link" href="#overview" title="Direct link to heading">​</a></h2><p>Koordinator v0.1.0 implements basic co-location scheduling capabilities, and after the project was released, it has received attention and positive responses from the community.
For some issues that everyone cares about, such as how to isolate resources for best-effort workloads, how to ensure the runtime stability of latency-sensitiv applications in co-location scenarios, etc., we have enhanced node-side scheduling capabilities in koordinator v0.2.0 to solve these problems.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="install-or-upgrade-to-koordinator-v020">Install or Upgrade to Koordinator v0.2.0<a class="hash-link" href="#install-or-upgrade-to-koordinator-v020" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_mojV" id="install-with-helms">Install with helms<a class="hash-link" href="#install-with-helms" title="Direct link to heading">​</a></h3><p>Koordinator can be simply installed by helm v3.5+, which is a simple command-line tool and you can get it from <a href="https://github.com/helm/helm/releases" target="_blank" rel="noopener noreferrer">here</a>.</p><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Firstly add koordinator charts repository if you haven't do this.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> koordinator-sh https://koordinator-sh.github.io/charts/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># [Optional]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Install the latest version.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> koordinator koordinator-sh/koordinator --version </span><span class="token number" style="color:#36acaa">0.2</span><span class="token plain">.0</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="upgrade-with-helm">Upgrade with helm<a class="hash-link" href="#upgrade-with-helm" title="Direct link to heading">​</a></h3><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Firstly add koordinator charts repository if you haven't do this.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> koordinator-sh https://koordinator-sh.github.io/charts/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># [Optional]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm repo update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Upgrade the latest version.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ helm upgrade koordinator koordinator-sh/koordinator --version </span><span class="token number" style="color:#36acaa">0.2</span><span class="token plain">.0 </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">--force</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>For more details, please refer to the <a href="/docs/installation">installation manual</a>.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="isolate-resources-for-best-effort-workloads">Isolate resources for best-effort workloads<a class="hash-link" href="#isolate-resources-for-best-effort-workloads" title="Direct link to heading">​</a></h2><p>In Koodinator v0.2.0, we refined the ability to isolate resources for best-effort worklods. </p><p><code>koordlet</code> will set the cgroup parameters according to the resources described in the Pod Spec. Currently supports setting CPU Request/Limit, and Memory Limit.</p><p>For CPU resources, only the case of <code>request == limit</code> is supported, and the support for the scenario of <code>request &lt;= limit</code> will be supported in the next version.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="active-eviction-mechanism-based-on-memory-safety-thresholds">Active eviction mechanism based on memory safety thresholds<a class="hash-link" href="#active-eviction-mechanism-based-on-memory-safety-thresholds" title="Direct link to heading">​</a></h2><p>When latency-sensitiv applications are serving, memory usage may increase due to bursty traffic. Similarly, there may be similar scenarios for best-effort workloads, for example, the current computing load exceeds the expected resource Request/Limit. </p><p>These scenarios will lead to an increase in the overall memory usage of the node, which will have an unpredictable impact on the runtime stability of the node side. For example, it can reduce the quality of service of latency-sensitiv applications or even become unavailable. Especially in a co-location environment, it is more challenging.</p><p>We implemented an active eviction mechanism based on memory safety thresholds in Koodinator. </p><p><code>koordlet</code> will regularly check the recent memory usage of node and Pods to check whether the safty threshold is exceeded. If it exceeds, it will evict some best-effort Pods to release memory. This mechanism can better ensure the stability of node and latency-sensitiv applications.</p><p><code>koordlet</code> currently only evicts best-effort Pods, sorted according to the Priority specified in the Pod Spec. The lower the priority, the higher the priority to be evicted, the same priority will be sorted according to the memory usage rate (RSS), the higher the memory usage, the higher the priority to be evicted. This eviction selection algorithm is not static. More dimensions will be considered in the future, and more refined implementations will be implemented for more scenarios to achieve more reasonable evictions.</p><p>The current memory utilization safety threshold default value is 70%. You can modify the <code>memoryEvictThresholdPercent</code> in ConfigMap <code>slo-controller-config</code> according to the actual situation, </p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ConfigMap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> slo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">controller</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> koordinator</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">system</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">colocation-config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">      "enable": true</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">resource-threshold-config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">      "clusterStrategy": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        "enable": true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        "memoryEvictThresholdPercent": 70</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    }</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="cpu-burst---improve-the-performance-of-latency-sensitive-applications">CPU Burst - Improve the performance of latency-sensitive applications<a class="hash-link" href="#cpu-burst---improve-the-performance-of-latency-sensitive-applications" title="Direct link to heading">​</a></h2><p>CPU Burst is a service level objective (SLO)-aware resource scheduling feature. You can use CPU Burst to improve the performance of latency-sensitive applications. CPU scheduling for a container may be throttled by the kernel due to the CPU limit, which downgrades the performance of the application. Koordinator automatically detects CPU throttling events and automatically adjusts the CPU limit to a proper value. This greatly improves the performance of latency-sensitive applications. </p><p>The code of CPU Burst has been developed and is still under review and testing. It will be released in the next version. If you want to use this ability early, you are welcome to participate in Koordiantor and improve it together. For more details, please refer to the PR <a href="https://github.com/koordinator-sh/koordinator/pull/73" target="_blank" rel="noopener noreferrer">#73</a>.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="more">More<a class="hash-link" href="#more" title="Direct link to heading">​</a></h2><p>For more details, please refer to the <a href="/docs">Documentation</a>. Hope it helps!</p>]]></content>
        <author>
            <name>Joseph</name>
            <uri>https://github.com/eahydra</uri>
        </author>
        <category label="koordinator" term="koordinator"/>
        <category label="colocation" term="colocation"/>
        <category label="kubernetes" term="kubernetes"/>
        <category label="scheduling" term="scheduling"/>
        <category label="orchestration" term="orchestration"/>
        <category label="release" term="release"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Koordinator v0.1.0 - QoS based scheduling system]]></title>
        <id>release-v0.1.0</id>
        <link href="https://koordinator.sh/blog/release-v0.1.0"/>
        <updated>2022-03-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We’re pleased to announce the release of Koordinator v0.1.0.]]></summary>
        <content type="html"><![CDATA[<p>We’re pleased to announce the release of Koordinator v0.1.0.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="overview">Overview<a class="hash-link" href="#overview" title="Direct link to heading">​</a></h2><p>Koordinator is a QoS based scheduling system for hybrid workloads orchestration on Kubernetes. It aims to improve the runtime efficiency and reliability of both latency sensitive workloads and batch jobs, simplify the complexity of resource-related configuration tuning, and increase pod deployment density to improve resource utilizations.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="key-features">Key Features<a class="hash-link" href="#key-features" title="Direct link to heading">​</a></h2><p>Koordinator enhances the kubernetes user experiences in the workload management by providing the following:</p><ul><li>Well-designed <a href="/docs/architecture/priority">priority</a> and <a href="/docs/architecture/qos">QoS</a> mechanism to co-locate different types of workloads in a cluster and run different types of pods on a single node.
Allowing for resource overcommitments to achieve high resource utilizations but still satisfying the QoS guarantees by leveraging an application profiling mechanism.</li><li>Fine-grained resource orchestration and isolation mechanism to improve the efficiency of latency-sensitive workloads and batch jobs.</li><li>Flexible job scheduling mechanism to support workloads in specific areas, e.g., big data, AI, audio and video.</li><li>A set of tools for monitoring, troubleshooting and operations.</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="node-metrics">Node Metrics<a class="hash-link" href="#node-metrics" title="Direct link to heading">​</a></h2><p>Koordinator defines the <code>NodeMetrics</code> CRD, which is used to record the resource utilization of a single node and all Pods on the node. koordlet will regularly report and update <code>NodeMetrics</code>. You can view <code>NodeMetrics</code> with the following commands.</p><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl get nodemetrics node-1 -o yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">apiVersion: slo.koordinator.sh/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kind: NodeMetric</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">metadata:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  creationTimestamp: </span><span class="token string" style="color:#e3116c">"2022-03-30T11:50:17Z"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  generation: </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name: node-1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  resourceVersion: </span><span class="token string" style="color:#e3116c">"2687986"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  uid: 1567bb4b-87a7-4273-a8fd-f44125c62b80</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">spec: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">status:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  nodeMetric:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nodeUsage:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      resources:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cpu: 138m</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        memory: </span><span class="token string" style="color:#e3116c">"1815637738"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  podsMetric:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  - name: storage-service-6c7c59f868-k72r5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    namespace: default</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    podUsage:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      resources:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cpu: </span><span class="token string" style="color:#e3116c">"300m"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        memory: 17828Ki</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="colocation-resources">Colocation Resources<a class="hash-link" href="#colocation-resources" title="Direct link to heading">​</a></h2><p>After the Koordinator is deployed in the K8s cluster, the Koordinator will calculate the CPU and Memory resources that have been allocated but not used according to the data of <code>NodeMetrics</code>. These resources are updated in Node in the form of extended resources. </p><p><code>koordinator.sh/batch-cpu</code> represents the CPU resources for Best Effort workloads,
<code>koordinator.sh/batch-memory</code> represents the Memory resources for Best Effort workloads. </p><p>You can view these resources with the following commands.</p><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl describe </span><span class="token function" style="color:#d73a49">node</span><span class="token plain"> node-1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Name:               node-1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Capacity:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  cpu:                          </span><span class="token number" style="color:#36acaa">8</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ephemeral-storage:            103080204Ki</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  koordinator.sh/batch-cpu:     </span><span class="token number" style="color:#36acaa">4541</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  koordinator.sh/batch-memory:  </span><span class="token number" style="color:#36acaa">17236565027</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  memory:                       32611012Ki</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  pods:                         </span><span class="token number" style="color:#36acaa">64</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Allocatable:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  cpu:                          7800m</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ephemeral-storage:            </span><span class="token number" style="color:#36acaa">94998715850</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  koordinator.sh/batch-cpu:     </span><span class="token number" style="color:#36acaa">4541</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  koordinator.sh/batch-memory:  </span><span class="token number" style="color:#36acaa">17236565027</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  memory:                       28629700Ki</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  pods:                         </span><span class="token number" style="color:#36acaa">64</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="cluster-level-colocation-profile">Cluster-level Colocation Profile<a class="hash-link" href="#cluster-level-colocation-profile" title="Direct link to heading">​</a></h2><p>In order to make it easier for everyone to use Koordinator to co-locate different workloads, we defined <code>ClusterColocationProfile</code> to help gray workloads use co-location resources. A <code>ClusterColocationProfile</code> is CRD like the one below. Please do edit each parameter to fit your own use cases.</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> config.koordinator.sh/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ClusterColocationProfile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> colocation</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">profile</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">example</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespaceSelector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">matchLabels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">koordinator.sh/enable-colocation</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"true"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">matchLabels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">sparkoperator.k8s.io/launched-by-spark-operator</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"true"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">qosClass</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> BE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">priorityClassName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> koord</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">batch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">koordinatorPriority</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">schedulerName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> koord</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">scheduler</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">koordinator.sh/mutated</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"true"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">annotations</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">koordinator.sh/intercepted</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"true"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">patch</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">terminationGracePeriodSeconds</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">30</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Various Koordinator components ensure scheduling and runtime quality through labels <code>koordinator.sh/qosClass</code>, <code>koordinator.sh/priority</code> and kubernetes native priority.</p><p>With the webhook mutating mechanism provided by Kubernetes, koord-manager will modify Pod resource requirements to co-located resources, and inject the QoS and Priority defined by Koordinator into Pod.</p><p>Taking the above Profile as an example, when the Spark Operator creates a new Pod in the namespace with the <code>koordinator.sh/enable-colocation=true</code> label, the Koordinator QoS label <code>koordinator.sh/qosClass</code> will be injected into the Pod. According to the Profile definition PriorityClassName, modify the Pod's PriorityClassName and the corresponding Priority value. Users can also set the Koordinator Priority according to their needs to achieve more fine-grained priority management, so the Koordinator Priority label <code>koordinator.sh/priority</code> is also injected into the Pod. Koordinator provides an enhanced scheduler koord-scheduler, so you need to modify the Pod's scheduler name koord-scheduler through Profile.</p><p>If you expect to integrate Koordinator into your own system, please learn more about the <a href="/docs/architecture/overview">core concepts</a>.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="cpu-suppress">CPU Suppress<a class="hash-link" href="#cpu-suppress" title="Direct link to heading">​</a></h2><p>In order to ensure the runtime quality of different workloads in co-located scenarios, Koordinator uses the CPU Suppress mechanism provided by koordlet on the node side to suppress workloads of the Best Effort type when the load increases. Or increase the resource quota for Best Effort type workloads when the load decreases.</p><p>When installing through the helm chart, the ConfigMap <code>slo-controller-config</code> will be created in the koordinator-system namespace, and the CPU Suppress mechanism is enabled by default. If it needs to be closed, refer to the configuration below, and modify the configuration of the resource-threshold-config section to take effect.</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ConfigMap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> slo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">controller</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> .Values.installation.namespace </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">resource-threshold-config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">      "clusterStrategy": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        "enable": false</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    }</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="colocation-resources-balance">Colocation Resources Balance<a class="hash-link" href="#colocation-resources-balance" title="Direct link to heading">​</a></h2><p>Koordinator currently adopts a strategy for node co-location resource scheduling, which prioritizes scheduling to machines with more resources remaining in co-location to avoid Best Effort workloads crowding together. More rich scheduling capabilities are on the way.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="tutorial---colocation-of-spark-jobs">Tutorial - Colocation of Spark Jobs<a class="hash-link" href="#tutorial---colocation-of-spark-jobs" title="Direct link to heading">​</a></h2><p>Apache Spark is an analysis engine for large-scale data processing, which is widely used in Big Data, SQL Analysis and Machine Learning scenarios.
We provide a tutorial to help you how to quickly use Koordinator to run Spark Jobs in colocation mode with other latency sensitive applications. For more details, please refer to the <a href="/docs/best-practices/colocation-of-spark-jobs">tutorial</a>.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="summary">Summary<a class="hash-link" href="#summary" title="Direct link to heading">​</a></h2><p>Fore More details, please refer to the <a href="/docs">Documentation</a>. Hope it helps!</p>]]></content>
        <author>
            <name>Joseph</name>
            <uri>https://github.com/eahydra</uri>
        </author>
        <author>
            <name>Fangsong Zeng</name>
            <uri>https://github.com/hormes</uri>
        </author>
        <category label="koordinator" term="koordinator"/>
        <category label="colocation" term="colocation"/>
        <category label="kubernetes" term="kubernetes"/>
        <category label="scheduling" term="scheduling"/>
        <category label="orchestration" term="orchestration"/>
        <category label="release" term="release"/>
    </entry>
</feed>